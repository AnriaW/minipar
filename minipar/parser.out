Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ELSE
    EOF
    FLOAT

Grammar

Rule 0     S' -> programa_minipar
Rule 1     programa_minipar -> bloco_stmt
Rule 2     bloco_stmt -> bloco_SEQ
Rule 3     bloco_stmt -> bloco_PAR
Rule 4     bloco_stmt -> bloco_stmt bloco_SEQ
Rule 5     bloco_stmt -> bloco_stmt bloco_PAR
Rule 6     bloco_SEQ -> SEQ LBRACE stmts RBRACE
Rule 7     bloco_PAR -> PAR LBRACE stmts RBRACE
Rule 8     bloco_IF -> IF LPAREN bool RPAREN LBRACE stmts RBRACE
Rule 9     bloco_WHILE -> WHILE LPAREN bool RPAREN LBRACE stmts RBRACE
Rule 10    bloco_INPUT -> INPUT LPAREN RPAREN
Rule 11    bloco_OUTPUT -> OUTPUT LPAREN output_args RPAREN
Rule 12    output_args -> expr
Rule 13    output_args -> output_args COMMA expr
Rule 14    stmts -> stmt
Rule 15    stmts -> stmts stmt
Rule 16    stmt -> atribuicao
Rule 17    stmt -> bloco_IF
Rule 18    stmt -> bloco_WHILE
Rule 19    stmt -> bloco_INPUT
Rule 20    stmt -> bloco_OUTPUT
Rule 21    stmt -> c_channel
Rule 22    stmt -> c_channel_stmt
Rule 23    atribuicao -> ID EQUALS expr
Rule 24    atribuicao -> ID EQUALS STRING
Rule 25    atribuicao -> ID EQUALS bloco_INPUT
Rule 26    atribuicao -> ID EQUALS receive_stmt
Rule 27    expr -> INT
Rule 28    expr -> STRING
Rule 29    expr -> expr PLUS expr
Rule 30    expr -> expr MINUS expr
Rule 31    expr -> expr TIMES expr
Rule 32    expr -> expr DIVIDE expr
Rule 33    expr -> expr LESS_THAN expr
Rule 34    expr -> expr GREATER_THAN expr
Rule 35    expr -> expr LESS_THAN_EQUALS expr
Rule 36    expr -> expr GREATER_THAN_EQUALS expr
Rule 37    expr -> expr EQUALS_EQUALS expr
Rule 38    expr -> expr NOT_EQUALS expr
Rule 39    expr -> ID
Rule 40    bool -> expr
Rule 41    comment -> COMMENT
Rule 42    c_channel -> C_CHANNEL ID LPAREN STRING COMMA STRING RPAREN
Rule 43    c_channel_stmt -> send_stmt
Rule 44    c_channel_stmt -> receive_stmt
Rule 45    send_stmt -> ID DOT SEND LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN
Rule 46    send_stmt -> ID DOT SEND LPAREN ID RPAREN
Rule 47    receive_stmt -> ID DOT RECEIVE LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN
Rule 48    receive_stmt -> ID DOT RECEIVE LPAREN ID RPAREN

Terminals, with rules where they appear

COMMA                : 13 42 45 45 45 47 47 47
COMMENT              : 41
C_CHANNEL            : 42
DIVIDE               : 32
DOT                  : 45 46 47 48
ELSE                 : 
EOF                  : 
EQUALS               : 23 24 25 26
EQUALS_EQUALS        : 37
FLOAT                : 
GREATER_THAN         : 34
GREATER_THAN_EQUALS  : 36
ID                   : 23 24 25 26 39 42 45 45 46 46 47 47 48 48
IF                   : 8
INPUT                : 10
INT                  : 27
LBRACE               : 6 7 8 9
LESS_THAN            : 33
LESS_THAN_EQUALS     : 35
LPAREN               : 8 9 10 11 42 45 46 47 48
MINUS                : 30
NOT_EQUALS           : 38
OUTPUT               : 11
PAR                  : 7
PLUS                 : 29
RBRACE               : 6 7 8 9
RECEIVE              : 47 48
RPAREN               : 8 9 10 11 42 45 46 47 48
SEND                 : 45 46
SEQ                  : 6
STRING               : 24 28 42 42
TIMES                : 31
WHILE                : 9
error                : 

Nonterminals, with rules where they appear

atribuicao           : 16
bloco_IF             : 17
bloco_INPUT          : 19 25
bloco_OUTPUT         : 20
bloco_PAR            : 3 5
bloco_SEQ            : 2 4
bloco_WHILE          : 18
bloco_stmt           : 1 4 5
bool                 : 8 9
c_channel            : 21
c_channel_stmt       : 22
comment              : 
expr                 : 12 13 23 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 40 45 45 45 47 47 47
output_args          : 11 13
programa_minipar     : 0
receive_stmt         : 26 44
send_stmt            : 43
stmt                 : 14 15
stmts                : 6 7 8 9 15

Parsing method: LALR

state 0

    (0) S' -> . programa_minipar
    (1) programa_minipar -> . bloco_stmt
    (2) bloco_stmt -> . bloco_SEQ
    (3) bloco_stmt -> . bloco_PAR
    (4) bloco_stmt -> . bloco_stmt bloco_SEQ
    (5) bloco_stmt -> . bloco_stmt bloco_PAR
    (6) bloco_SEQ -> . SEQ LBRACE stmts RBRACE
    (7) bloco_PAR -> . PAR LBRACE stmts RBRACE

    SEQ             shift and go to state 5
    PAR             shift and go to state 6

    programa_minipar               shift and go to state 1
    bloco_stmt                     shift and go to state 2
    bloco_SEQ                      shift and go to state 3
    bloco_PAR                      shift and go to state 4

state 1

    (0) S' -> programa_minipar .



state 2

    (1) programa_minipar -> bloco_stmt .
    (4) bloco_stmt -> bloco_stmt . bloco_SEQ
    (5) bloco_stmt -> bloco_stmt . bloco_PAR
    (6) bloco_SEQ -> . SEQ LBRACE stmts RBRACE
    (7) bloco_PAR -> . PAR LBRACE stmts RBRACE

    $end            reduce using rule 1 (programa_minipar -> bloco_stmt .)
    SEQ             shift and go to state 5
    PAR             shift and go to state 6

    bloco_SEQ                      shift and go to state 7
    bloco_PAR                      shift and go to state 8

state 3

    (2) bloco_stmt -> bloco_SEQ .

    SEQ             reduce using rule 2 (bloco_stmt -> bloco_SEQ .)
    PAR             reduce using rule 2 (bloco_stmt -> bloco_SEQ .)
    $end            reduce using rule 2 (bloco_stmt -> bloco_SEQ .)


state 4

    (3) bloco_stmt -> bloco_PAR .

    SEQ             reduce using rule 3 (bloco_stmt -> bloco_PAR .)
    PAR             reduce using rule 3 (bloco_stmt -> bloco_PAR .)
    $end            reduce using rule 3 (bloco_stmt -> bloco_PAR .)


state 5

    (6) bloco_SEQ -> SEQ . LBRACE stmts RBRACE

    LBRACE          shift and go to state 9


state 6

    (7) bloco_PAR -> PAR . LBRACE stmts RBRACE

    LBRACE          shift and go to state 10


state 7

    (4) bloco_stmt -> bloco_stmt bloco_SEQ .

    SEQ             reduce using rule 4 (bloco_stmt -> bloco_stmt bloco_SEQ .)
    PAR             reduce using rule 4 (bloco_stmt -> bloco_stmt bloco_SEQ .)
    $end            reduce using rule 4 (bloco_stmt -> bloco_stmt bloco_SEQ .)


state 8

    (5) bloco_stmt -> bloco_stmt bloco_PAR .

    SEQ             reduce using rule 5 (bloco_stmt -> bloco_stmt bloco_PAR .)
    PAR             reduce using rule 5 (bloco_stmt -> bloco_stmt bloco_PAR .)
    $end            reduce using rule 5 (bloco_stmt -> bloco_stmt bloco_PAR .)


state 9

    (6) bloco_SEQ -> SEQ LBRACE . stmts RBRACE
    (14) stmts -> . stmt
    (15) stmts -> . stmts stmt
    (16) stmt -> . atribuicao
    (17) stmt -> . bloco_IF
    (18) stmt -> . bloco_WHILE
    (19) stmt -> . bloco_INPUT
    (20) stmt -> . bloco_OUTPUT
    (21) stmt -> . c_channel
    (22) stmt -> . c_channel_stmt
    (23) atribuicao -> . ID EQUALS expr
    (24) atribuicao -> . ID EQUALS STRING
    (25) atribuicao -> . ID EQUALS bloco_INPUT
    (26) atribuicao -> . ID EQUALS receive_stmt
    (8) bloco_IF -> . IF LPAREN bool RPAREN LBRACE stmts RBRACE
    (9) bloco_WHILE -> . WHILE LPAREN bool RPAREN LBRACE stmts RBRACE
    (10) bloco_INPUT -> . INPUT LPAREN RPAREN
    (11) bloco_OUTPUT -> . OUTPUT LPAREN output_args RPAREN
    (42) c_channel -> . C_CHANNEL ID LPAREN STRING COMMA STRING RPAREN
    (43) c_channel_stmt -> . send_stmt
    (44) c_channel_stmt -> . receive_stmt
    (45) send_stmt -> . ID DOT SEND LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN
    (46) send_stmt -> . ID DOT SEND LPAREN ID RPAREN
    (47) receive_stmt -> . ID DOT RECEIVE LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN
    (48) receive_stmt -> . ID DOT RECEIVE LPAREN ID RPAREN

    ID              shift and go to state 20
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    INPUT           shift and go to state 24
    OUTPUT          shift and go to state 25
    C_CHANNEL       shift and go to state 26

    stmts                          shift and go to state 11
    stmt                           shift and go to state 12
    atribuicao                     shift and go to state 13
    bloco_IF                       shift and go to state 14
    bloco_WHILE                    shift and go to state 15
    bloco_INPUT                    shift and go to state 16
    bloco_OUTPUT                   shift and go to state 17
    c_channel                      shift and go to state 18
    c_channel_stmt                 shift and go to state 19
    receive_stmt                   shift and go to state 21
    send_stmt                      shift and go to state 27

state 10

    (7) bloco_PAR -> PAR LBRACE . stmts RBRACE
    (14) stmts -> . stmt
    (15) stmts -> . stmts stmt
    (16) stmt -> . atribuicao
    (17) stmt -> . bloco_IF
    (18) stmt -> . bloco_WHILE
    (19) stmt -> . bloco_INPUT
    (20) stmt -> . bloco_OUTPUT
    (21) stmt -> . c_channel
    (22) stmt -> . c_channel_stmt
    (23) atribuicao -> . ID EQUALS expr
    (24) atribuicao -> . ID EQUALS STRING
    (25) atribuicao -> . ID EQUALS bloco_INPUT
    (26) atribuicao -> . ID EQUALS receive_stmt
    (8) bloco_IF -> . IF LPAREN bool RPAREN LBRACE stmts RBRACE
    (9) bloco_WHILE -> . WHILE LPAREN bool RPAREN LBRACE stmts RBRACE
    (10) bloco_INPUT -> . INPUT LPAREN RPAREN
    (11) bloco_OUTPUT -> . OUTPUT LPAREN output_args RPAREN
    (42) c_channel -> . C_CHANNEL ID LPAREN STRING COMMA STRING RPAREN
    (43) c_channel_stmt -> . send_stmt
    (44) c_channel_stmt -> . receive_stmt
    (45) send_stmt -> . ID DOT SEND LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN
    (46) send_stmt -> . ID DOT SEND LPAREN ID RPAREN
    (47) receive_stmt -> . ID DOT RECEIVE LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN
    (48) receive_stmt -> . ID DOT RECEIVE LPAREN ID RPAREN

    ID              shift and go to state 20
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    INPUT           shift and go to state 24
    OUTPUT          shift and go to state 25
    C_CHANNEL       shift and go to state 26

    stmts                          shift and go to state 28
    stmt                           shift and go to state 12
    atribuicao                     shift and go to state 13
    bloco_IF                       shift and go to state 14
    bloco_WHILE                    shift and go to state 15
    bloco_INPUT                    shift and go to state 16
    bloco_OUTPUT                   shift and go to state 17
    c_channel                      shift and go to state 18
    c_channel_stmt                 shift and go to state 19
    receive_stmt                   shift and go to state 21
    send_stmt                      shift and go to state 27

state 11

    (6) bloco_SEQ -> SEQ LBRACE stmts . RBRACE
    (15) stmts -> stmts . stmt
    (16) stmt -> . atribuicao
    (17) stmt -> . bloco_IF
    (18) stmt -> . bloco_WHILE
    (19) stmt -> . bloco_INPUT
    (20) stmt -> . bloco_OUTPUT
    (21) stmt -> . c_channel
    (22) stmt -> . c_channel_stmt
    (23) atribuicao -> . ID EQUALS expr
    (24) atribuicao -> . ID EQUALS STRING
    (25) atribuicao -> . ID EQUALS bloco_INPUT
    (26) atribuicao -> . ID EQUALS receive_stmt
    (8) bloco_IF -> . IF LPAREN bool RPAREN LBRACE stmts RBRACE
    (9) bloco_WHILE -> . WHILE LPAREN bool RPAREN LBRACE stmts RBRACE
    (10) bloco_INPUT -> . INPUT LPAREN RPAREN
    (11) bloco_OUTPUT -> . OUTPUT LPAREN output_args RPAREN
    (42) c_channel -> . C_CHANNEL ID LPAREN STRING COMMA STRING RPAREN
    (43) c_channel_stmt -> . send_stmt
    (44) c_channel_stmt -> . receive_stmt
    (45) send_stmt -> . ID DOT SEND LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN
    (46) send_stmt -> . ID DOT SEND LPAREN ID RPAREN
    (47) receive_stmt -> . ID DOT RECEIVE LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN
    (48) receive_stmt -> . ID DOT RECEIVE LPAREN ID RPAREN

    RBRACE          shift and go to state 29
    ID              shift and go to state 20
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    INPUT           shift and go to state 24
    OUTPUT          shift and go to state 25
    C_CHANNEL       shift and go to state 26

    stmt                           shift and go to state 30
    atribuicao                     shift and go to state 13
    bloco_IF                       shift and go to state 14
    bloco_WHILE                    shift and go to state 15
    bloco_INPUT                    shift and go to state 16
    bloco_OUTPUT                   shift and go to state 17
    c_channel                      shift and go to state 18
    c_channel_stmt                 shift and go to state 19
    receive_stmt                   shift and go to state 21
    send_stmt                      shift and go to state 27

state 12

    (14) stmts -> stmt .

    RBRACE          reduce using rule 14 (stmts -> stmt .)
    ID              reduce using rule 14 (stmts -> stmt .)
    IF              reduce using rule 14 (stmts -> stmt .)
    WHILE           reduce using rule 14 (stmts -> stmt .)
    INPUT           reduce using rule 14 (stmts -> stmt .)
    OUTPUT          reduce using rule 14 (stmts -> stmt .)
    C_CHANNEL       reduce using rule 14 (stmts -> stmt .)


state 13

    (16) stmt -> atribuicao .

    RBRACE          reduce using rule 16 (stmt -> atribuicao .)
    ID              reduce using rule 16 (stmt -> atribuicao .)
    IF              reduce using rule 16 (stmt -> atribuicao .)
    WHILE           reduce using rule 16 (stmt -> atribuicao .)
    INPUT           reduce using rule 16 (stmt -> atribuicao .)
    OUTPUT          reduce using rule 16 (stmt -> atribuicao .)
    C_CHANNEL       reduce using rule 16 (stmt -> atribuicao .)


state 14

    (17) stmt -> bloco_IF .

    RBRACE          reduce using rule 17 (stmt -> bloco_IF .)
    ID              reduce using rule 17 (stmt -> bloco_IF .)
    IF              reduce using rule 17 (stmt -> bloco_IF .)
    WHILE           reduce using rule 17 (stmt -> bloco_IF .)
    INPUT           reduce using rule 17 (stmt -> bloco_IF .)
    OUTPUT          reduce using rule 17 (stmt -> bloco_IF .)
    C_CHANNEL       reduce using rule 17 (stmt -> bloco_IF .)


state 15

    (18) stmt -> bloco_WHILE .

    RBRACE          reduce using rule 18 (stmt -> bloco_WHILE .)
    ID              reduce using rule 18 (stmt -> bloco_WHILE .)
    IF              reduce using rule 18 (stmt -> bloco_WHILE .)
    WHILE           reduce using rule 18 (stmt -> bloco_WHILE .)
    INPUT           reduce using rule 18 (stmt -> bloco_WHILE .)
    OUTPUT          reduce using rule 18 (stmt -> bloco_WHILE .)
    C_CHANNEL       reduce using rule 18 (stmt -> bloco_WHILE .)


state 16

    (19) stmt -> bloco_INPUT .

    RBRACE          reduce using rule 19 (stmt -> bloco_INPUT .)
    ID              reduce using rule 19 (stmt -> bloco_INPUT .)
    IF              reduce using rule 19 (stmt -> bloco_INPUT .)
    WHILE           reduce using rule 19 (stmt -> bloco_INPUT .)
    INPUT           reduce using rule 19 (stmt -> bloco_INPUT .)
    OUTPUT          reduce using rule 19 (stmt -> bloco_INPUT .)
    C_CHANNEL       reduce using rule 19 (stmt -> bloco_INPUT .)


state 17

    (20) stmt -> bloco_OUTPUT .

    RBRACE          reduce using rule 20 (stmt -> bloco_OUTPUT .)
    ID              reduce using rule 20 (stmt -> bloco_OUTPUT .)
    IF              reduce using rule 20 (stmt -> bloco_OUTPUT .)
    WHILE           reduce using rule 20 (stmt -> bloco_OUTPUT .)
    INPUT           reduce using rule 20 (stmt -> bloco_OUTPUT .)
    OUTPUT          reduce using rule 20 (stmt -> bloco_OUTPUT .)
    C_CHANNEL       reduce using rule 20 (stmt -> bloco_OUTPUT .)


state 18

    (21) stmt -> c_channel .

    RBRACE          reduce using rule 21 (stmt -> c_channel .)
    ID              reduce using rule 21 (stmt -> c_channel .)
    IF              reduce using rule 21 (stmt -> c_channel .)
    WHILE           reduce using rule 21 (stmt -> c_channel .)
    INPUT           reduce using rule 21 (stmt -> c_channel .)
    OUTPUT          reduce using rule 21 (stmt -> c_channel .)
    C_CHANNEL       reduce using rule 21 (stmt -> c_channel .)


state 19

    (22) stmt -> c_channel_stmt .

    RBRACE          reduce using rule 22 (stmt -> c_channel_stmt .)
    ID              reduce using rule 22 (stmt -> c_channel_stmt .)
    IF              reduce using rule 22 (stmt -> c_channel_stmt .)
    WHILE           reduce using rule 22 (stmt -> c_channel_stmt .)
    INPUT           reduce using rule 22 (stmt -> c_channel_stmt .)
    OUTPUT          reduce using rule 22 (stmt -> c_channel_stmt .)
    C_CHANNEL       reduce using rule 22 (stmt -> c_channel_stmt .)


state 20

    (23) atribuicao -> ID . EQUALS expr
    (24) atribuicao -> ID . EQUALS STRING
    (25) atribuicao -> ID . EQUALS bloco_INPUT
    (26) atribuicao -> ID . EQUALS receive_stmt
    (45) send_stmt -> ID . DOT SEND LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN
    (46) send_stmt -> ID . DOT SEND LPAREN ID RPAREN
    (47) receive_stmt -> ID . DOT RECEIVE LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN
    (48) receive_stmt -> ID . DOT RECEIVE LPAREN ID RPAREN

    EQUALS          shift and go to state 31
    DOT             shift and go to state 32


state 21

    (44) c_channel_stmt -> receive_stmt .

    RBRACE          reduce using rule 44 (c_channel_stmt -> receive_stmt .)
    ID              reduce using rule 44 (c_channel_stmt -> receive_stmt .)
    IF              reduce using rule 44 (c_channel_stmt -> receive_stmt .)
    WHILE           reduce using rule 44 (c_channel_stmt -> receive_stmt .)
    INPUT           reduce using rule 44 (c_channel_stmt -> receive_stmt .)
    OUTPUT          reduce using rule 44 (c_channel_stmt -> receive_stmt .)
    C_CHANNEL       reduce using rule 44 (c_channel_stmt -> receive_stmt .)


state 22

    (8) bloco_IF -> IF . LPAREN bool RPAREN LBRACE stmts RBRACE

    LPAREN          shift and go to state 33


state 23

    (9) bloco_WHILE -> WHILE . LPAREN bool RPAREN LBRACE stmts RBRACE

    LPAREN          shift and go to state 34


state 24

    (10) bloco_INPUT -> INPUT . LPAREN RPAREN

    LPAREN          shift and go to state 35


state 25

    (11) bloco_OUTPUT -> OUTPUT . LPAREN output_args RPAREN

    LPAREN          shift and go to state 36


state 26

    (42) c_channel -> C_CHANNEL . ID LPAREN STRING COMMA STRING RPAREN

    ID              shift and go to state 37


state 27

    (43) c_channel_stmt -> send_stmt .

    RBRACE          reduce using rule 43 (c_channel_stmt -> send_stmt .)
    ID              reduce using rule 43 (c_channel_stmt -> send_stmt .)
    IF              reduce using rule 43 (c_channel_stmt -> send_stmt .)
    WHILE           reduce using rule 43 (c_channel_stmt -> send_stmt .)
    INPUT           reduce using rule 43 (c_channel_stmt -> send_stmt .)
    OUTPUT          reduce using rule 43 (c_channel_stmt -> send_stmt .)
    C_CHANNEL       reduce using rule 43 (c_channel_stmt -> send_stmt .)


state 28

    (7) bloco_PAR -> PAR LBRACE stmts . RBRACE
    (15) stmts -> stmts . stmt
    (16) stmt -> . atribuicao
    (17) stmt -> . bloco_IF
    (18) stmt -> . bloco_WHILE
    (19) stmt -> . bloco_INPUT
    (20) stmt -> . bloco_OUTPUT
    (21) stmt -> . c_channel
    (22) stmt -> . c_channel_stmt
    (23) atribuicao -> . ID EQUALS expr
    (24) atribuicao -> . ID EQUALS STRING
    (25) atribuicao -> . ID EQUALS bloco_INPUT
    (26) atribuicao -> . ID EQUALS receive_stmt
    (8) bloco_IF -> . IF LPAREN bool RPAREN LBRACE stmts RBRACE
    (9) bloco_WHILE -> . WHILE LPAREN bool RPAREN LBRACE stmts RBRACE
    (10) bloco_INPUT -> . INPUT LPAREN RPAREN
    (11) bloco_OUTPUT -> . OUTPUT LPAREN output_args RPAREN
    (42) c_channel -> . C_CHANNEL ID LPAREN STRING COMMA STRING RPAREN
    (43) c_channel_stmt -> . send_stmt
    (44) c_channel_stmt -> . receive_stmt
    (45) send_stmt -> . ID DOT SEND LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN
    (46) send_stmt -> . ID DOT SEND LPAREN ID RPAREN
    (47) receive_stmt -> . ID DOT RECEIVE LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN
    (48) receive_stmt -> . ID DOT RECEIVE LPAREN ID RPAREN

    RBRACE          shift and go to state 38
    ID              shift and go to state 20
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    INPUT           shift and go to state 24
    OUTPUT          shift and go to state 25
    C_CHANNEL       shift and go to state 26

    stmt                           shift and go to state 30
    atribuicao                     shift and go to state 13
    bloco_IF                       shift and go to state 14
    bloco_WHILE                    shift and go to state 15
    bloco_INPUT                    shift and go to state 16
    bloco_OUTPUT                   shift and go to state 17
    c_channel                      shift and go to state 18
    c_channel_stmt                 shift and go to state 19
    receive_stmt                   shift and go to state 21
    send_stmt                      shift and go to state 27

state 29

    (6) bloco_SEQ -> SEQ LBRACE stmts RBRACE .

    SEQ             reduce using rule 6 (bloco_SEQ -> SEQ LBRACE stmts RBRACE .)
    PAR             reduce using rule 6 (bloco_SEQ -> SEQ LBRACE stmts RBRACE .)
    $end            reduce using rule 6 (bloco_SEQ -> SEQ LBRACE stmts RBRACE .)


state 30

    (15) stmts -> stmts stmt .

    RBRACE          reduce using rule 15 (stmts -> stmts stmt .)
    ID              reduce using rule 15 (stmts -> stmts stmt .)
    IF              reduce using rule 15 (stmts -> stmts stmt .)
    WHILE           reduce using rule 15 (stmts -> stmts stmt .)
    INPUT           reduce using rule 15 (stmts -> stmts stmt .)
    OUTPUT          reduce using rule 15 (stmts -> stmts stmt .)
    C_CHANNEL       reduce using rule 15 (stmts -> stmts stmt .)


state 31

    (23) atribuicao -> ID EQUALS . expr
    (24) atribuicao -> ID EQUALS . STRING
    (25) atribuicao -> ID EQUALS . bloco_INPUT
    (26) atribuicao -> ID EQUALS . receive_stmt
    (27) expr -> . INT
    (28) expr -> . STRING
    (29) expr -> . expr PLUS expr
    (30) expr -> . expr MINUS expr
    (31) expr -> . expr TIMES expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr LESS_THAN expr
    (34) expr -> . expr GREATER_THAN expr
    (35) expr -> . expr LESS_THAN_EQUALS expr
    (36) expr -> . expr GREATER_THAN_EQUALS expr
    (37) expr -> . expr EQUALS_EQUALS expr
    (38) expr -> . expr NOT_EQUALS expr
    (39) expr -> . ID
    (10) bloco_INPUT -> . INPUT LPAREN RPAREN
    (47) receive_stmt -> . ID DOT RECEIVE LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN
    (48) receive_stmt -> . ID DOT RECEIVE LPAREN ID RPAREN

    STRING          shift and go to state 41
    INT             shift and go to state 44
    ID              shift and go to state 39
    INPUT           shift and go to state 24

    expr                           shift and go to state 40
    bloco_INPUT                    shift and go to state 42
    receive_stmt                   shift and go to state 43

state 32

    (45) send_stmt -> ID DOT . SEND LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN
    (46) send_stmt -> ID DOT . SEND LPAREN ID RPAREN
    (47) receive_stmt -> ID DOT . RECEIVE LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN
    (48) receive_stmt -> ID DOT . RECEIVE LPAREN ID RPAREN

    SEND            shift and go to state 45
    RECEIVE         shift and go to state 46


state 33

    (8) bloco_IF -> IF LPAREN . bool RPAREN LBRACE stmts RBRACE
    (40) bool -> . expr
    (27) expr -> . INT
    (28) expr -> . STRING
    (29) expr -> . expr PLUS expr
    (30) expr -> . expr MINUS expr
    (31) expr -> . expr TIMES expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr LESS_THAN expr
    (34) expr -> . expr GREATER_THAN expr
    (35) expr -> . expr LESS_THAN_EQUALS expr
    (36) expr -> . expr GREATER_THAN_EQUALS expr
    (37) expr -> . expr EQUALS_EQUALS expr
    (38) expr -> . expr NOT_EQUALS expr
    (39) expr -> . ID

    INT             shift and go to state 44
    STRING          shift and go to state 49
    ID              shift and go to state 50

    bool                           shift and go to state 47
    expr                           shift and go to state 48

state 34

    (9) bloco_WHILE -> WHILE LPAREN . bool RPAREN LBRACE stmts RBRACE
    (40) bool -> . expr
    (27) expr -> . INT
    (28) expr -> . STRING
    (29) expr -> . expr PLUS expr
    (30) expr -> . expr MINUS expr
    (31) expr -> . expr TIMES expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr LESS_THAN expr
    (34) expr -> . expr GREATER_THAN expr
    (35) expr -> . expr LESS_THAN_EQUALS expr
    (36) expr -> . expr GREATER_THAN_EQUALS expr
    (37) expr -> . expr EQUALS_EQUALS expr
    (38) expr -> . expr NOT_EQUALS expr
    (39) expr -> . ID

    INT             shift and go to state 44
    STRING          shift and go to state 49
    ID              shift and go to state 50

    bool                           shift and go to state 51
    expr                           shift and go to state 48

state 35

    (10) bloco_INPUT -> INPUT LPAREN . RPAREN

    RPAREN          shift and go to state 52


state 36

    (11) bloco_OUTPUT -> OUTPUT LPAREN . output_args RPAREN
    (12) output_args -> . expr
    (13) output_args -> . output_args COMMA expr
    (27) expr -> . INT
    (28) expr -> . STRING
    (29) expr -> . expr PLUS expr
    (30) expr -> . expr MINUS expr
    (31) expr -> . expr TIMES expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr LESS_THAN expr
    (34) expr -> . expr GREATER_THAN expr
    (35) expr -> . expr LESS_THAN_EQUALS expr
    (36) expr -> . expr GREATER_THAN_EQUALS expr
    (37) expr -> . expr EQUALS_EQUALS expr
    (38) expr -> . expr NOT_EQUALS expr
    (39) expr -> . ID

    INT             shift and go to state 44
    STRING          shift and go to state 49
    ID              shift and go to state 50

    output_args                    shift and go to state 53
    expr                           shift and go to state 54

state 37

    (42) c_channel -> C_CHANNEL ID . LPAREN STRING COMMA STRING RPAREN

    LPAREN          shift and go to state 55


state 38

    (7) bloco_PAR -> PAR LBRACE stmts RBRACE .

    SEQ             reduce using rule 7 (bloco_PAR -> PAR LBRACE stmts RBRACE .)
    PAR             reduce using rule 7 (bloco_PAR -> PAR LBRACE stmts RBRACE .)
    $end            reduce using rule 7 (bloco_PAR -> PAR LBRACE stmts RBRACE .)


state 39

    (39) expr -> ID .
    (47) receive_stmt -> ID . DOT RECEIVE LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN
    (48) receive_stmt -> ID . DOT RECEIVE LPAREN ID RPAREN

    PLUS            reduce using rule 39 (expr -> ID .)
    MINUS           reduce using rule 39 (expr -> ID .)
    TIMES           reduce using rule 39 (expr -> ID .)
    DIVIDE          reduce using rule 39 (expr -> ID .)
    LESS_THAN       reduce using rule 39 (expr -> ID .)
    GREATER_THAN    reduce using rule 39 (expr -> ID .)
    LESS_THAN_EQUALS reduce using rule 39 (expr -> ID .)
    GREATER_THAN_EQUALS reduce using rule 39 (expr -> ID .)
    EQUALS_EQUALS   reduce using rule 39 (expr -> ID .)
    NOT_EQUALS      reduce using rule 39 (expr -> ID .)
    RBRACE          reduce using rule 39 (expr -> ID .)
    ID              reduce using rule 39 (expr -> ID .)
    IF              reduce using rule 39 (expr -> ID .)
    WHILE           reduce using rule 39 (expr -> ID .)
    INPUT           reduce using rule 39 (expr -> ID .)
    OUTPUT          reduce using rule 39 (expr -> ID .)
    C_CHANNEL       reduce using rule 39 (expr -> ID .)
    DOT             shift and go to state 56


state 40

    (23) atribuicao -> ID EQUALS expr .
    (29) expr -> expr . PLUS expr
    (30) expr -> expr . MINUS expr
    (31) expr -> expr . TIMES expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . LESS_THAN expr
    (34) expr -> expr . GREATER_THAN expr
    (35) expr -> expr . LESS_THAN_EQUALS expr
    (36) expr -> expr . GREATER_THAN_EQUALS expr
    (37) expr -> expr . EQUALS_EQUALS expr
    (38) expr -> expr . NOT_EQUALS expr

    RBRACE          reduce using rule 23 (atribuicao -> ID EQUALS expr .)
    ID              reduce using rule 23 (atribuicao -> ID EQUALS expr .)
    IF              reduce using rule 23 (atribuicao -> ID EQUALS expr .)
    WHILE           reduce using rule 23 (atribuicao -> ID EQUALS expr .)
    INPUT           reduce using rule 23 (atribuicao -> ID EQUALS expr .)
    OUTPUT          reduce using rule 23 (atribuicao -> ID EQUALS expr .)
    C_CHANNEL       reduce using rule 23 (atribuicao -> ID EQUALS expr .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    TIMES           shift and go to state 59
    DIVIDE          shift and go to state 60
    LESS_THAN       shift and go to state 61
    GREATER_THAN    shift and go to state 62
    LESS_THAN_EQUALS shift and go to state 63
    GREATER_THAN_EQUALS shift and go to state 64
    EQUALS_EQUALS   shift and go to state 65
    NOT_EQUALS      shift and go to state 66


state 41

    (24) atribuicao -> ID EQUALS STRING .
    (28) expr -> STRING .

  ! reduce/reduce conflict for RBRACE resolved using rule 24 (atribuicao -> ID EQUALS STRING .)
  ! reduce/reduce conflict for ID resolved using rule 24 (atribuicao -> ID EQUALS STRING .)
  ! reduce/reduce conflict for IF resolved using rule 24 (atribuicao -> ID EQUALS STRING .)
  ! reduce/reduce conflict for WHILE resolved using rule 24 (atribuicao -> ID EQUALS STRING .)
  ! reduce/reduce conflict for INPUT resolved using rule 24 (atribuicao -> ID EQUALS STRING .)
  ! reduce/reduce conflict for OUTPUT resolved using rule 24 (atribuicao -> ID EQUALS STRING .)
  ! reduce/reduce conflict for C_CHANNEL resolved using rule 24 (atribuicao -> ID EQUALS STRING .)
    RBRACE          reduce using rule 24 (atribuicao -> ID EQUALS STRING .)
    ID              reduce using rule 24 (atribuicao -> ID EQUALS STRING .)
    IF              reduce using rule 24 (atribuicao -> ID EQUALS STRING .)
    WHILE           reduce using rule 24 (atribuicao -> ID EQUALS STRING .)
    INPUT           reduce using rule 24 (atribuicao -> ID EQUALS STRING .)
    OUTPUT          reduce using rule 24 (atribuicao -> ID EQUALS STRING .)
    C_CHANNEL       reduce using rule 24 (atribuicao -> ID EQUALS STRING .)
    PLUS            reduce using rule 28 (expr -> STRING .)
    MINUS           reduce using rule 28 (expr -> STRING .)
    TIMES           reduce using rule 28 (expr -> STRING .)
    DIVIDE          reduce using rule 28 (expr -> STRING .)
    LESS_THAN       reduce using rule 28 (expr -> STRING .)
    GREATER_THAN    reduce using rule 28 (expr -> STRING .)
    LESS_THAN_EQUALS reduce using rule 28 (expr -> STRING .)
    GREATER_THAN_EQUALS reduce using rule 28 (expr -> STRING .)
    EQUALS_EQUALS   reduce using rule 28 (expr -> STRING .)
    NOT_EQUALS      reduce using rule 28 (expr -> STRING .)

  ! RBRACE          [ reduce using rule 28 (expr -> STRING .) ]
  ! ID              [ reduce using rule 28 (expr -> STRING .) ]
  ! IF              [ reduce using rule 28 (expr -> STRING .) ]
  ! WHILE           [ reduce using rule 28 (expr -> STRING .) ]
  ! INPUT           [ reduce using rule 28 (expr -> STRING .) ]
  ! OUTPUT          [ reduce using rule 28 (expr -> STRING .) ]
  ! C_CHANNEL       [ reduce using rule 28 (expr -> STRING .) ]


state 42

    (25) atribuicao -> ID EQUALS bloco_INPUT .

    RBRACE          reduce using rule 25 (atribuicao -> ID EQUALS bloco_INPUT .)
    ID              reduce using rule 25 (atribuicao -> ID EQUALS bloco_INPUT .)
    IF              reduce using rule 25 (atribuicao -> ID EQUALS bloco_INPUT .)
    WHILE           reduce using rule 25 (atribuicao -> ID EQUALS bloco_INPUT .)
    INPUT           reduce using rule 25 (atribuicao -> ID EQUALS bloco_INPUT .)
    OUTPUT          reduce using rule 25 (atribuicao -> ID EQUALS bloco_INPUT .)
    C_CHANNEL       reduce using rule 25 (atribuicao -> ID EQUALS bloco_INPUT .)


state 43

    (26) atribuicao -> ID EQUALS receive_stmt .

    RBRACE          reduce using rule 26 (atribuicao -> ID EQUALS receive_stmt .)
    ID              reduce using rule 26 (atribuicao -> ID EQUALS receive_stmt .)
    IF              reduce using rule 26 (atribuicao -> ID EQUALS receive_stmt .)
    WHILE           reduce using rule 26 (atribuicao -> ID EQUALS receive_stmt .)
    INPUT           reduce using rule 26 (atribuicao -> ID EQUALS receive_stmt .)
    OUTPUT          reduce using rule 26 (atribuicao -> ID EQUALS receive_stmt .)
    C_CHANNEL       reduce using rule 26 (atribuicao -> ID EQUALS receive_stmt .)


state 44

    (27) expr -> INT .

    PLUS            reduce using rule 27 (expr -> INT .)
    MINUS           reduce using rule 27 (expr -> INT .)
    TIMES           reduce using rule 27 (expr -> INT .)
    DIVIDE          reduce using rule 27 (expr -> INT .)
    LESS_THAN       reduce using rule 27 (expr -> INT .)
    GREATER_THAN    reduce using rule 27 (expr -> INT .)
    LESS_THAN_EQUALS reduce using rule 27 (expr -> INT .)
    GREATER_THAN_EQUALS reduce using rule 27 (expr -> INT .)
    EQUALS_EQUALS   reduce using rule 27 (expr -> INT .)
    NOT_EQUALS      reduce using rule 27 (expr -> INT .)
    RBRACE          reduce using rule 27 (expr -> INT .)
    ID              reduce using rule 27 (expr -> INT .)
    IF              reduce using rule 27 (expr -> INT .)
    WHILE           reduce using rule 27 (expr -> INT .)
    INPUT           reduce using rule 27 (expr -> INT .)
    OUTPUT          reduce using rule 27 (expr -> INT .)
    C_CHANNEL       reduce using rule 27 (expr -> INT .)
    RPAREN          reduce using rule 27 (expr -> INT .)
    COMMA           reduce using rule 27 (expr -> INT .)


state 45

    (45) send_stmt -> ID DOT SEND . LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN
    (46) send_stmt -> ID DOT SEND . LPAREN ID RPAREN

    LPAREN          shift and go to state 67


state 46

    (47) receive_stmt -> ID DOT RECEIVE . LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN
    (48) receive_stmt -> ID DOT RECEIVE . LPAREN ID RPAREN

    LPAREN          shift and go to state 68


state 47

    (8) bloco_IF -> IF LPAREN bool . RPAREN LBRACE stmts RBRACE

    RPAREN          shift and go to state 69


state 48

    (40) bool -> expr .
    (29) expr -> expr . PLUS expr
    (30) expr -> expr . MINUS expr
    (31) expr -> expr . TIMES expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . LESS_THAN expr
    (34) expr -> expr . GREATER_THAN expr
    (35) expr -> expr . LESS_THAN_EQUALS expr
    (36) expr -> expr . GREATER_THAN_EQUALS expr
    (37) expr -> expr . EQUALS_EQUALS expr
    (38) expr -> expr . NOT_EQUALS expr

    RPAREN          reduce using rule 40 (bool -> expr .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    TIMES           shift and go to state 59
    DIVIDE          shift and go to state 60
    LESS_THAN       shift and go to state 61
    GREATER_THAN    shift and go to state 62
    LESS_THAN_EQUALS shift and go to state 63
    GREATER_THAN_EQUALS shift and go to state 64
    EQUALS_EQUALS   shift and go to state 65
    NOT_EQUALS      shift and go to state 66


state 49

    (28) expr -> STRING .

    PLUS            reduce using rule 28 (expr -> STRING .)
    MINUS           reduce using rule 28 (expr -> STRING .)
    TIMES           reduce using rule 28 (expr -> STRING .)
    DIVIDE          reduce using rule 28 (expr -> STRING .)
    LESS_THAN       reduce using rule 28 (expr -> STRING .)
    GREATER_THAN    reduce using rule 28 (expr -> STRING .)
    LESS_THAN_EQUALS reduce using rule 28 (expr -> STRING .)
    GREATER_THAN_EQUALS reduce using rule 28 (expr -> STRING .)
    EQUALS_EQUALS   reduce using rule 28 (expr -> STRING .)
    NOT_EQUALS      reduce using rule 28 (expr -> STRING .)
    RPAREN          reduce using rule 28 (expr -> STRING .)
    COMMA           reduce using rule 28 (expr -> STRING .)
    RBRACE          reduce using rule 28 (expr -> STRING .)
    ID              reduce using rule 28 (expr -> STRING .)
    IF              reduce using rule 28 (expr -> STRING .)
    WHILE           reduce using rule 28 (expr -> STRING .)
    INPUT           reduce using rule 28 (expr -> STRING .)
    OUTPUT          reduce using rule 28 (expr -> STRING .)
    C_CHANNEL       reduce using rule 28 (expr -> STRING .)


state 50

    (39) expr -> ID .

    PLUS            reduce using rule 39 (expr -> ID .)
    MINUS           reduce using rule 39 (expr -> ID .)
    TIMES           reduce using rule 39 (expr -> ID .)
    DIVIDE          reduce using rule 39 (expr -> ID .)
    LESS_THAN       reduce using rule 39 (expr -> ID .)
    GREATER_THAN    reduce using rule 39 (expr -> ID .)
    LESS_THAN_EQUALS reduce using rule 39 (expr -> ID .)
    GREATER_THAN_EQUALS reduce using rule 39 (expr -> ID .)
    EQUALS_EQUALS   reduce using rule 39 (expr -> ID .)
    NOT_EQUALS      reduce using rule 39 (expr -> ID .)
    RPAREN          reduce using rule 39 (expr -> ID .)
    COMMA           reduce using rule 39 (expr -> ID .)
    RBRACE          reduce using rule 39 (expr -> ID .)
    ID              reduce using rule 39 (expr -> ID .)
    IF              reduce using rule 39 (expr -> ID .)
    WHILE           reduce using rule 39 (expr -> ID .)
    INPUT           reduce using rule 39 (expr -> ID .)
    OUTPUT          reduce using rule 39 (expr -> ID .)
    C_CHANNEL       reduce using rule 39 (expr -> ID .)


state 51

    (9) bloco_WHILE -> WHILE LPAREN bool . RPAREN LBRACE stmts RBRACE

    RPAREN          shift and go to state 70


state 52

    (10) bloco_INPUT -> INPUT LPAREN RPAREN .

    RBRACE          reduce using rule 10 (bloco_INPUT -> INPUT LPAREN RPAREN .)
    ID              reduce using rule 10 (bloco_INPUT -> INPUT LPAREN RPAREN .)
    IF              reduce using rule 10 (bloco_INPUT -> INPUT LPAREN RPAREN .)
    WHILE           reduce using rule 10 (bloco_INPUT -> INPUT LPAREN RPAREN .)
    INPUT           reduce using rule 10 (bloco_INPUT -> INPUT LPAREN RPAREN .)
    OUTPUT          reduce using rule 10 (bloco_INPUT -> INPUT LPAREN RPAREN .)
    C_CHANNEL       reduce using rule 10 (bloco_INPUT -> INPUT LPAREN RPAREN .)


state 53

    (11) bloco_OUTPUT -> OUTPUT LPAREN output_args . RPAREN
    (13) output_args -> output_args . COMMA expr

    RPAREN          shift and go to state 71
    COMMA           shift and go to state 72


state 54

    (12) output_args -> expr .
    (29) expr -> expr . PLUS expr
    (30) expr -> expr . MINUS expr
    (31) expr -> expr . TIMES expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . LESS_THAN expr
    (34) expr -> expr . GREATER_THAN expr
    (35) expr -> expr . LESS_THAN_EQUALS expr
    (36) expr -> expr . GREATER_THAN_EQUALS expr
    (37) expr -> expr . EQUALS_EQUALS expr
    (38) expr -> expr . NOT_EQUALS expr

    RPAREN          reduce using rule 12 (output_args -> expr .)
    COMMA           reduce using rule 12 (output_args -> expr .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    TIMES           shift and go to state 59
    DIVIDE          shift and go to state 60
    LESS_THAN       shift and go to state 61
    GREATER_THAN    shift and go to state 62
    LESS_THAN_EQUALS shift and go to state 63
    GREATER_THAN_EQUALS shift and go to state 64
    EQUALS_EQUALS   shift and go to state 65
    NOT_EQUALS      shift and go to state 66


state 55

    (42) c_channel -> C_CHANNEL ID LPAREN . STRING COMMA STRING RPAREN

    STRING          shift and go to state 73


state 56

    (47) receive_stmt -> ID DOT . RECEIVE LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN
    (48) receive_stmt -> ID DOT . RECEIVE LPAREN ID RPAREN

    RECEIVE         shift and go to state 46


state 57

    (29) expr -> expr PLUS . expr
    (27) expr -> . INT
    (28) expr -> . STRING
    (29) expr -> . expr PLUS expr
    (30) expr -> . expr MINUS expr
    (31) expr -> . expr TIMES expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr LESS_THAN expr
    (34) expr -> . expr GREATER_THAN expr
    (35) expr -> . expr LESS_THAN_EQUALS expr
    (36) expr -> . expr GREATER_THAN_EQUALS expr
    (37) expr -> . expr EQUALS_EQUALS expr
    (38) expr -> . expr NOT_EQUALS expr
    (39) expr -> . ID

    INT             shift and go to state 44
    STRING          shift and go to state 49
    ID              shift and go to state 50

    expr                           shift and go to state 74

state 58

    (30) expr -> expr MINUS . expr
    (27) expr -> . INT
    (28) expr -> . STRING
    (29) expr -> . expr PLUS expr
    (30) expr -> . expr MINUS expr
    (31) expr -> . expr TIMES expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr LESS_THAN expr
    (34) expr -> . expr GREATER_THAN expr
    (35) expr -> . expr LESS_THAN_EQUALS expr
    (36) expr -> . expr GREATER_THAN_EQUALS expr
    (37) expr -> . expr EQUALS_EQUALS expr
    (38) expr -> . expr NOT_EQUALS expr
    (39) expr -> . ID

    INT             shift and go to state 44
    STRING          shift and go to state 49
    ID              shift and go to state 50

    expr                           shift and go to state 75

state 59

    (31) expr -> expr TIMES . expr
    (27) expr -> . INT
    (28) expr -> . STRING
    (29) expr -> . expr PLUS expr
    (30) expr -> . expr MINUS expr
    (31) expr -> . expr TIMES expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr LESS_THAN expr
    (34) expr -> . expr GREATER_THAN expr
    (35) expr -> . expr LESS_THAN_EQUALS expr
    (36) expr -> . expr GREATER_THAN_EQUALS expr
    (37) expr -> . expr EQUALS_EQUALS expr
    (38) expr -> . expr NOT_EQUALS expr
    (39) expr -> . ID

    INT             shift and go to state 44
    STRING          shift and go to state 49
    ID              shift and go to state 50

    expr                           shift and go to state 76

state 60

    (32) expr -> expr DIVIDE . expr
    (27) expr -> . INT
    (28) expr -> . STRING
    (29) expr -> . expr PLUS expr
    (30) expr -> . expr MINUS expr
    (31) expr -> . expr TIMES expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr LESS_THAN expr
    (34) expr -> . expr GREATER_THAN expr
    (35) expr -> . expr LESS_THAN_EQUALS expr
    (36) expr -> . expr GREATER_THAN_EQUALS expr
    (37) expr -> . expr EQUALS_EQUALS expr
    (38) expr -> . expr NOT_EQUALS expr
    (39) expr -> . ID

    INT             shift and go to state 44
    STRING          shift and go to state 49
    ID              shift and go to state 50

    expr                           shift and go to state 77

state 61

    (33) expr -> expr LESS_THAN . expr
    (27) expr -> . INT
    (28) expr -> . STRING
    (29) expr -> . expr PLUS expr
    (30) expr -> . expr MINUS expr
    (31) expr -> . expr TIMES expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr LESS_THAN expr
    (34) expr -> . expr GREATER_THAN expr
    (35) expr -> . expr LESS_THAN_EQUALS expr
    (36) expr -> . expr GREATER_THAN_EQUALS expr
    (37) expr -> . expr EQUALS_EQUALS expr
    (38) expr -> . expr NOT_EQUALS expr
    (39) expr -> . ID

    INT             shift and go to state 44
    STRING          shift and go to state 49
    ID              shift and go to state 50

    expr                           shift and go to state 78

state 62

    (34) expr -> expr GREATER_THAN . expr
    (27) expr -> . INT
    (28) expr -> . STRING
    (29) expr -> . expr PLUS expr
    (30) expr -> . expr MINUS expr
    (31) expr -> . expr TIMES expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr LESS_THAN expr
    (34) expr -> . expr GREATER_THAN expr
    (35) expr -> . expr LESS_THAN_EQUALS expr
    (36) expr -> . expr GREATER_THAN_EQUALS expr
    (37) expr -> . expr EQUALS_EQUALS expr
    (38) expr -> . expr NOT_EQUALS expr
    (39) expr -> . ID

    INT             shift and go to state 44
    STRING          shift and go to state 49
    ID              shift and go to state 50

    expr                           shift and go to state 79

state 63

    (35) expr -> expr LESS_THAN_EQUALS . expr
    (27) expr -> . INT
    (28) expr -> . STRING
    (29) expr -> . expr PLUS expr
    (30) expr -> . expr MINUS expr
    (31) expr -> . expr TIMES expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr LESS_THAN expr
    (34) expr -> . expr GREATER_THAN expr
    (35) expr -> . expr LESS_THAN_EQUALS expr
    (36) expr -> . expr GREATER_THAN_EQUALS expr
    (37) expr -> . expr EQUALS_EQUALS expr
    (38) expr -> . expr NOT_EQUALS expr
    (39) expr -> . ID

    INT             shift and go to state 44
    STRING          shift and go to state 49
    ID              shift and go to state 50

    expr                           shift and go to state 80

state 64

    (36) expr -> expr GREATER_THAN_EQUALS . expr
    (27) expr -> . INT
    (28) expr -> . STRING
    (29) expr -> . expr PLUS expr
    (30) expr -> . expr MINUS expr
    (31) expr -> . expr TIMES expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr LESS_THAN expr
    (34) expr -> . expr GREATER_THAN expr
    (35) expr -> . expr LESS_THAN_EQUALS expr
    (36) expr -> . expr GREATER_THAN_EQUALS expr
    (37) expr -> . expr EQUALS_EQUALS expr
    (38) expr -> . expr NOT_EQUALS expr
    (39) expr -> . ID

    INT             shift and go to state 44
    STRING          shift and go to state 49
    ID              shift and go to state 50

    expr                           shift and go to state 81

state 65

    (37) expr -> expr EQUALS_EQUALS . expr
    (27) expr -> . INT
    (28) expr -> . STRING
    (29) expr -> . expr PLUS expr
    (30) expr -> . expr MINUS expr
    (31) expr -> . expr TIMES expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr LESS_THAN expr
    (34) expr -> . expr GREATER_THAN expr
    (35) expr -> . expr LESS_THAN_EQUALS expr
    (36) expr -> . expr GREATER_THAN_EQUALS expr
    (37) expr -> . expr EQUALS_EQUALS expr
    (38) expr -> . expr NOT_EQUALS expr
    (39) expr -> . ID

    INT             shift and go to state 44
    STRING          shift and go to state 49
    ID              shift and go to state 50

    expr                           shift and go to state 82

state 66

    (38) expr -> expr NOT_EQUALS . expr
    (27) expr -> . INT
    (28) expr -> . STRING
    (29) expr -> . expr PLUS expr
    (30) expr -> . expr MINUS expr
    (31) expr -> . expr TIMES expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr LESS_THAN expr
    (34) expr -> . expr GREATER_THAN expr
    (35) expr -> . expr LESS_THAN_EQUALS expr
    (36) expr -> . expr GREATER_THAN_EQUALS expr
    (37) expr -> . expr EQUALS_EQUALS expr
    (38) expr -> . expr NOT_EQUALS expr
    (39) expr -> . ID

    INT             shift and go to state 44
    STRING          shift and go to state 49
    ID              shift and go to state 50

    expr                           shift and go to state 83

state 67

    (45) send_stmt -> ID DOT SEND LPAREN . ID COMMA expr COMMA expr COMMA expr RPAREN
    (46) send_stmt -> ID DOT SEND LPAREN . ID RPAREN

    ID              shift and go to state 84


state 68

    (47) receive_stmt -> ID DOT RECEIVE LPAREN . ID COMMA expr COMMA expr COMMA expr RPAREN
    (48) receive_stmt -> ID DOT RECEIVE LPAREN . ID RPAREN

    ID              shift and go to state 85


state 69

    (8) bloco_IF -> IF LPAREN bool RPAREN . LBRACE stmts RBRACE

    LBRACE          shift and go to state 86


state 70

    (9) bloco_WHILE -> WHILE LPAREN bool RPAREN . LBRACE stmts RBRACE

    LBRACE          shift and go to state 87


state 71

    (11) bloco_OUTPUT -> OUTPUT LPAREN output_args RPAREN .

    RBRACE          reduce using rule 11 (bloco_OUTPUT -> OUTPUT LPAREN output_args RPAREN .)
    ID              reduce using rule 11 (bloco_OUTPUT -> OUTPUT LPAREN output_args RPAREN .)
    IF              reduce using rule 11 (bloco_OUTPUT -> OUTPUT LPAREN output_args RPAREN .)
    WHILE           reduce using rule 11 (bloco_OUTPUT -> OUTPUT LPAREN output_args RPAREN .)
    INPUT           reduce using rule 11 (bloco_OUTPUT -> OUTPUT LPAREN output_args RPAREN .)
    OUTPUT          reduce using rule 11 (bloco_OUTPUT -> OUTPUT LPAREN output_args RPAREN .)
    C_CHANNEL       reduce using rule 11 (bloco_OUTPUT -> OUTPUT LPAREN output_args RPAREN .)


state 72

    (13) output_args -> output_args COMMA . expr
    (27) expr -> . INT
    (28) expr -> . STRING
    (29) expr -> . expr PLUS expr
    (30) expr -> . expr MINUS expr
    (31) expr -> . expr TIMES expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr LESS_THAN expr
    (34) expr -> . expr GREATER_THAN expr
    (35) expr -> . expr LESS_THAN_EQUALS expr
    (36) expr -> . expr GREATER_THAN_EQUALS expr
    (37) expr -> . expr EQUALS_EQUALS expr
    (38) expr -> . expr NOT_EQUALS expr
    (39) expr -> . ID

    INT             shift and go to state 44
    STRING          shift and go to state 49
    ID              shift and go to state 50

    expr                           shift and go to state 88

state 73

    (42) c_channel -> C_CHANNEL ID LPAREN STRING . COMMA STRING RPAREN

    COMMA           shift and go to state 89


state 74

    (29) expr -> expr PLUS expr .
    (29) expr -> expr . PLUS expr
    (30) expr -> expr . MINUS expr
    (31) expr -> expr . TIMES expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . LESS_THAN expr
    (34) expr -> expr . GREATER_THAN expr
    (35) expr -> expr . LESS_THAN_EQUALS expr
    (36) expr -> expr . GREATER_THAN_EQUALS expr
    (37) expr -> expr . EQUALS_EQUALS expr
    (38) expr -> expr . NOT_EQUALS expr

    PLUS            reduce using rule 29 (expr -> expr PLUS expr .)
    MINUS           reduce using rule 29 (expr -> expr PLUS expr .)
    RBRACE          reduce using rule 29 (expr -> expr PLUS expr .)
    ID              reduce using rule 29 (expr -> expr PLUS expr .)
    IF              reduce using rule 29 (expr -> expr PLUS expr .)
    WHILE           reduce using rule 29 (expr -> expr PLUS expr .)
    INPUT           reduce using rule 29 (expr -> expr PLUS expr .)
    OUTPUT          reduce using rule 29 (expr -> expr PLUS expr .)
    C_CHANNEL       reduce using rule 29 (expr -> expr PLUS expr .)
    RPAREN          reduce using rule 29 (expr -> expr PLUS expr .)
    COMMA           reduce using rule 29 (expr -> expr PLUS expr .)
    TIMES           shift and go to state 59
    DIVIDE          shift and go to state 60
    LESS_THAN       shift and go to state 61
    GREATER_THAN    shift and go to state 62
    LESS_THAN_EQUALS shift and go to state 63
    GREATER_THAN_EQUALS shift and go to state 64
    EQUALS_EQUALS   shift and go to state 65
    NOT_EQUALS      shift and go to state 66

  ! TIMES           [ reduce using rule 29 (expr -> expr PLUS expr .) ]
  ! DIVIDE          [ reduce using rule 29 (expr -> expr PLUS expr .) ]
  ! LESS_THAN       [ reduce using rule 29 (expr -> expr PLUS expr .) ]
  ! GREATER_THAN    [ reduce using rule 29 (expr -> expr PLUS expr .) ]
  ! LESS_THAN_EQUALS [ reduce using rule 29 (expr -> expr PLUS expr .) ]
  ! GREATER_THAN_EQUALS [ reduce using rule 29 (expr -> expr PLUS expr .) ]
  ! EQUALS_EQUALS   [ reduce using rule 29 (expr -> expr PLUS expr .) ]
  ! NOT_EQUALS      [ reduce using rule 29 (expr -> expr PLUS expr .) ]
  ! PLUS            [ shift and go to state 57 ]
  ! MINUS           [ shift and go to state 58 ]


state 75

    (30) expr -> expr MINUS expr .
    (29) expr -> expr . PLUS expr
    (30) expr -> expr . MINUS expr
    (31) expr -> expr . TIMES expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . LESS_THAN expr
    (34) expr -> expr . GREATER_THAN expr
    (35) expr -> expr . LESS_THAN_EQUALS expr
    (36) expr -> expr . GREATER_THAN_EQUALS expr
    (37) expr -> expr . EQUALS_EQUALS expr
    (38) expr -> expr . NOT_EQUALS expr

    PLUS            reduce using rule 30 (expr -> expr MINUS expr .)
    MINUS           reduce using rule 30 (expr -> expr MINUS expr .)
    RBRACE          reduce using rule 30 (expr -> expr MINUS expr .)
    ID              reduce using rule 30 (expr -> expr MINUS expr .)
    IF              reduce using rule 30 (expr -> expr MINUS expr .)
    WHILE           reduce using rule 30 (expr -> expr MINUS expr .)
    INPUT           reduce using rule 30 (expr -> expr MINUS expr .)
    OUTPUT          reduce using rule 30 (expr -> expr MINUS expr .)
    C_CHANNEL       reduce using rule 30 (expr -> expr MINUS expr .)
    RPAREN          reduce using rule 30 (expr -> expr MINUS expr .)
    COMMA           reduce using rule 30 (expr -> expr MINUS expr .)
    TIMES           shift and go to state 59
    DIVIDE          shift and go to state 60
    LESS_THAN       shift and go to state 61
    GREATER_THAN    shift and go to state 62
    LESS_THAN_EQUALS shift and go to state 63
    GREATER_THAN_EQUALS shift and go to state 64
    EQUALS_EQUALS   shift and go to state 65
    NOT_EQUALS      shift and go to state 66

  ! TIMES           [ reduce using rule 30 (expr -> expr MINUS expr .) ]
  ! DIVIDE          [ reduce using rule 30 (expr -> expr MINUS expr .) ]
  ! LESS_THAN       [ reduce using rule 30 (expr -> expr MINUS expr .) ]
  ! GREATER_THAN    [ reduce using rule 30 (expr -> expr MINUS expr .) ]
  ! LESS_THAN_EQUALS [ reduce using rule 30 (expr -> expr MINUS expr .) ]
  ! GREATER_THAN_EQUALS [ reduce using rule 30 (expr -> expr MINUS expr .) ]
  ! EQUALS_EQUALS   [ reduce using rule 30 (expr -> expr MINUS expr .) ]
  ! NOT_EQUALS      [ reduce using rule 30 (expr -> expr MINUS expr .) ]
  ! PLUS            [ shift and go to state 57 ]
  ! MINUS           [ shift and go to state 58 ]


state 76

    (31) expr -> expr TIMES expr .
    (29) expr -> expr . PLUS expr
    (30) expr -> expr . MINUS expr
    (31) expr -> expr . TIMES expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . LESS_THAN expr
    (34) expr -> expr . GREATER_THAN expr
    (35) expr -> expr . LESS_THAN_EQUALS expr
    (36) expr -> expr . GREATER_THAN_EQUALS expr
    (37) expr -> expr . EQUALS_EQUALS expr
    (38) expr -> expr . NOT_EQUALS expr

    PLUS            reduce using rule 31 (expr -> expr TIMES expr .)
    MINUS           reduce using rule 31 (expr -> expr TIMES expr .)
    TIMES           reduce using rule 31 (expr -> expr TIMES expr .)
    DIVIDE          reduce using rule 31 (expr -> expr TIMES expr .)
    RBRACE          reduce using rule 31 (expr -> expr TIMES expr .)
    ID              reduce using rule 31 (expr -> expr TIMES expr .)
    IF              reduce using rule 31 (expr -> expr TIMES expr .)
    WHILE           reduce using rule 31 (expr -> expr TIMES expr .)
    INPUT           reduce using rule 31 (expr -> expr TIMES expr .)
    OUTPUT          reduce using rule 31 (expr -> expr TIMES expr .)
    C_CHANNEL       reduce using rule 31 (expr -> expr TIMES expr .)
    RPAREN          reduce using rule 31 (expr -> expr TIMES expr .)
    COMMA           reduce using rule 31 (expr -> expr TIMES expr .)
    LESS_THAN       shift and go to state 61
    GREATER_THAN    shift and go to state 62
    LESS_THAN_EQUALS shift and go to state 63
    GREATER_THAN_EQUALS shift and go to state 64
    EQUALS_EQUALS   shift and go to state 65
    NOT_EQUALS      shift and go to state 66

  ! LESS_THAN       [ reduce using rule 31 (expr -> expr TIMES expr .) ]
  ! GREATER_THAN    [ reduce using rule 31 (expr -> expr TIMES expr .) ]
  ! LESS_THAN_EQUALS [ reduce using rule 31 (expr -> expr TIMES expr .) ]
  ! GREATER_THAN_EQUALS [ reduce using rule 31 (expr -> expr TIMES expr .) ]
  ! EQUALS_EQUALS   [ reduce using rule 31 (expr -> expr TIMES expr .) ]
  ! NOT_EQUALS      [ reduce using rule 31 (expr -> expr TIMES expr .) ]
  ! PLUS            [ shift and go to state 57 ]
  ! MINUS           [ shift and go to state 58 ]
  ! TIMES           [ shift and go to state 59 ]
  ! DIVIDE          [ shift and go to state 60 ]


state 77

    (32) expr -> expr DIVIDE expr .
    (29) expr -> expr . PLUS expr
    (30) expr -> expr . MINUS expr
    (31) expr -> expr . TIMES expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . LESS_THAN expr
    (34) expr -> expr . GREATER_THAN expr
    (35) expr -> expr . LESS_THAN_EQUALS expr
    (36) expr -> expr . GREATER_THAN_EQUALS expr
    (37) expr -> expr . EQUALS_EQUALS expr
    (38) expr -> expr . NOT_EQUALS expr

    PLUS            reduce using rule 32 (expr -> expr DIVIDE expr .)
    MINUS           reduce using rule 32 (expr -> expr DIVIDE expr .)
    TIMES           reduce using rule 32 (expr -> expr DIVIDE expr .)
    DIVIDE          reduce using rule 32 (expr -> expr DIVIDE expr .)
    RBRACE          reduce using rule 32 (expr -> expr DIVIDE expr .)
    ID              reduce using rule 32 (expr -> expr DIVIDE expr .)
    IF              reduce using rule 32 (expr -> expr DIVIDE expr .)
    WHILE           reduce using rule 32 (expr -> expr DIVIDE expr .)
    INPUT           reduce using rule 32 (expr -> expr DIVIDE expr .)
    OUTPUT          reduce using rule 32 (expr -> expr DIVIDE expr .)
    C_CHANNEL       reduce using rule 32 (expr -> expr DIVIDE expr .)
    RPAREN          reduce using rule 32 (expr -> expr DIVIDE expr .)
    COMMA           reduce using rule 32 (expr -> expr DIVIDE expr .)
    LESS_THAN       shift and go to state 61
    GREATER_THAN    shift and go to state 62
    LESS_THAN_EQUALS shift and go to state 63
    GREATER_THAN_EQUALS shift and go to state 64
    EQUALS_EQUALS   shift and go to state 65
    NOT_EQUALS      shift and go to state 66

  ! LESS_THAN       [ reduce using rule 32 (expr -> expr DIVIDE expr .) ]
  ! GREATER_THAN    [ reduce using rule 32 (expr -> expr DIVIDE expr .) ]
  ! LESS_THAN_EQUALS [ reduce using rule 32 (expr -> expr DIVIDE expr .) ]
  ! GREATER_THAN_EQUALS [ reduce using rule 32 (expr -> expr DIVIDE expr .) ]
  ! EQUALS_EQUALS   [ reduce using rule 32 (expr -> expr DIVIDE expr .) ]
  ! NOT_EQUALS      [ reduce using rule 32 (expr -> expr DIVIDE expr .) ]
  ! PLUS            [ shift and go to state 57 ]
  ! MINUS           [ shift and go to state 58 ]
  ! TIMES           [ shift and go to state 59 ]
  ! DIVIDE          [ shift and go to state 60 ]


state 78

    (33) expr -> expr LESS_THAN expr .
    (29) expr -> expr . PLUS expr
    (30) expr -> expr . MINUS expr
    (31) expr -> expr . TIMES expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . LESS_THAN expr
    (34) expr -> expr . GREATER_THAN expr
    (35) expr -> expr . LESS_THAN_EQUALS expr
    (36) expr -> expr . GREATER_THAN_EQUALS expr
    (37) expr -> expr . EQUALS_EQUALS expr
    (38) expr -> expr . NOT_EQUALS expr

    PLUS            reduce using rule 33 (expr -> expr LESS_THAN expr .)
    MINUS           reduce using rule 33 (expr -> expr LESS_THAN expr .)
    TIMES           reduce using rule 33 (expr -> expr LESS_THAN expr .)
    DIVIDE          reduce using rule 33 (expr -> expr LESS_THAN expr .)
    LESS_THAN       reduce using rule 33 (expr -> expr LESS_THAN expr .)
    GREATER_THAN    reduce using rule 33 (expr -> expr LESS_THAN expr .)
    LESS_THAN_EQUALS reduce using rule 33 (expr -> expr LESS_THAN expr .)
    GREATER_THAN_EQUALS reduce using rule 33 (expr -> expr LESS_THAN expr .)
    EQUALS_EQUALS   reduce using rule 33 (expr -> expr LESS_THAN expr .)
    NOT_EQUALS      reduce using rule 33 (expr -> expr LESS_THAN expr .)
    RBRACE          reduce using rule 33 (expr -> expr LESS_THAN expr .)
    ID              reduce using rule 33 (expr -> expr LESS_THAN expr .)
    IF              reduce using rule 33 (expr -> expr LESS_THAN expr .)
    WHILE           reduce using rule 33 (expr -> expr LESS_THAN expr .)
    INPUT           reduce using rule 33 (expr -> expr LESS_THAN expr .)
    OUTPUT          reduce using rule 33 (expr -> expr LESS_THAN expr .)
    C_CHANNEL       reduce using rule 33 (expr -> expr LESS_THAN expr .)
    RPAREN          reduce using rule 33 (expr -> expr LESS_THAN expr .)
    COMMA           reduce using rule 33 (expr -> expr LESS_THAN expr .)

  ! PLUS            [ shift and go to state 57 ]
  ! MINUS           [ shift and go to state 58 ]
  ! TIMES           [ shift and go to state 59 ]
  ! DIVIDE          [ shift and go to state 60 ]
  ! LESS_THAN       [ shift and go to state 61 ]
  ! GREATER_THAN    [ shift and go to state 62 ]
  ! LESS_THAN_EQUALS [ shift and go to state 63 ]
  ! GREATER_THAN_EQUALS [ shift and go to state 64 ]
  ! EQUALS_EQUALS   [ shift and go to state 65 ]
  ! NOT_EQUALS      [ shift and go to state 66 ]


state 79

    (34) expr -> expr GREATER_THAN expr .
    (29) expr -> expr . PLUS expr
    (30) expr -> expr . MINUS expr
    (31) expr -> expr . TIMES expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . LESS_THAN expr
    (34) expr -> expr . GREATER_THAN expr
    (35) expr -> expr . LESS_THAN_EQUALS expr
    (36) expr -> expr . GREATER_THAN_EQUALS expr
    (37) expr -> expr . EQUALS_EQUALS expr
    (38) expr -> expr . NOT_EQUALS expr

    PLUS            reduce using rule 34 (expr -> expr GREATER_THAN expr .)
    MINUS           reduce using rule 34 (expr -> expr GREATER_THAN expr .)
    TIMES           reduce using rule 34 (expr -> expr GREATER_THAN expr .)
    DIVIDE          reduce using rule 34 (expr -> expr GREATER_THAN expr .)
    LESS_THAN       reduce using rule 34 (expr -> expr GREATER_THAN expr .)
    GREATER_THAN    reduce using rule 34 (expr -> expr GREATER_THAN expr .)
    LESS_THAN_EQUALS reduce using rule 34 (expr -> expr GREATER_THAN expr .)
    GREATER_THAN_EQUALS reduce using rule 34 (expr -> expr GREATER_THAN expr .)
    EQUALS_EQUALS   reduce using rule 34 (expr -> expr GREATER_THAN expr .)
    NOT_EQUALS      reduce using rule 34 (expr -> expr GREATER_THAN expr .)
    RBRACE          reduce using rule 34 (expr -> expr GREATER_THAN expr .)
    ID              reduce using rule 34 (expr -> expr GREATER_THAN expr .)
    IF              reduce using rule 34 (expr -> expr GREATER_THAN expr .)
    WHILE           reduce using rule 34 (expr -> expr GREATER_THAN expr .)
    INPUT           reduce using rule 34 (expr -> expr GREATER_THAN expr .)
    OUTPUT          reduce using rule 34 (expr -> expr GREATER_THAN expr .)
    C_CHANNEL       reduce using rule 34 (expr -> expr GREATER_THAN expr .)
    RPAREN          reduce using rule 34 (expr -> expr GREATER_THAN expr .)
    COMMA           reduce using rule 34 (expr -> expr GREATER_THAN expr .)

  ! PLUS            [ shift and go to state 57 ]
  ! MINUS           [ shift and go to state 58 ]
  ! TIMES           [ shift and go to state 59 ]
  ! DIVIDE          [ shift and go to state 60 ]
  ! LESS_THAN       [ shift and go to state 61 ]
  ! GREATER_THAN    [ shift and go to state 62 ]
  ! LESS_THAN_EQUALS [ shift and go to state 63 ]
  ! GREATER_THAN_EQUALS [ shift and go to state 64 ]
  ! EQUALS_EQUALS   [ shift and go to state 65 ]
  ! NOT_EQUALS      [ shift and go to state 66 ]


state 80

    (35) expr -> expr LESS_THAN_EQUALS expr .
    (29) expr -> expr . PLUS expr
    (30) expr -> expr . MINUS expr
    (31) expr -> expr . TIMES expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . LESS_THAN expr
    (34) expr -> expr . GREATER_THAN expr
    (35) expr -> expr . LESS_THAN_EQUALS expr
    (36) expr -> expr . GREATER_THAN_EQUALS expr
    (37) expr -> expr . EQUALS_EQUALS expr
    (38) expr -> expr . NOT_EQUALS expr

    PLUS            reduce using rule 35 (expr -> expr LESS_THAN_EQUALS expr .)
    MINUS           reduce using rule 35 (expr -> expr LESS_THAN_EQUALS expr .)
    TIMES           reduce using rule 35 (expr -> expr LESS_THAN_EQUALS expr .)
    DIVIDE          reduce using rule 35 (expr -> expr LESS_THAN_EQUALS expr .)
    LESS_THAN       reduce using rule 35 (expr -> expr LESS_THAN_EQUALS expr .)
    GREATER_THAN    reduce using rule 35 (expr -> expr LESS_THAN_EQUALS expr .)
    LESS_THAN_EQUALS reduce using rule 35 (expr -> expr LESS_THAN_EQUALS expr .)
    GREATER_THAN_EQUALS reduce using rule 35 (expr -> expr LESS_THAN_EQUALS expr .)
    EQUALS_EQUALS   reduce using rule 35 (expr -> expr LESS_THAN_EQUALS expr .)
    NOT_EQUALS      reduce using rule 35 (expr -> expr LESS_THAN_EQUALS expr .)
    RBRACE          reduce using rule 35 (expr -> expr LESS_THAN_EQUALS expr .)
    ID              reduce using rule 35 (expr -> expr LESS_THAN_EQUALS expr .)
    IF              reduce using rule 35 (expr -> expr LESS_THAN_EQUALS expr .)
    WHILE           reduce using rule 35 (expr -> expr LESS_THAN_EQUALS expr .)
    INPUT           reduce using rule 35 (expr -> expr LESS_THAN_EQUALS expr .)
    OUTPUT          reduce using rule 35 (expr -> expr LESS_THAN_EQUALS expr .)
    C_CHANNEL       reduce using rule 35 (expr -> expr LESS_THAN_EQUALS expr .)
    RPAREN          reduce using rule 35 (expr -> expr LESS_THAN_EQUALS expr .)
    COMMA           reduce using rule 35 (expr -> expr LESS_THAN_EQUALS expr .)

  ! PLUS            [ shift and go to state 57 ]
  ! MINUS           [ shift and go to state 58 ]
  ! TIMES           [ shift and go to state 59 ]
  ! DIVIDE          [ shift and go to state 60 ]
  ! LESS_THAN       [ shift and go to state 61 ]
  ! GREATER_THAN    [ shift and go to state 62 ]
  ! LESS_THAN_EQUALS [ shift and go to state 63 ]
  ! GREATER_THAN_EQUALS [ shift and go to state 64 ]
  ! EQUALS_EQUALS   [ shift and go to state 65 ]
  ! NOT_EQUALS      [ shift and go to state 66 ]


state 81

    (36) expr -> expr GREATER_THAN_EQUALS expr .
    (29) expr -> expr . PLUS expr
    (30) expr -> expr . MINUS expr
    (31) expr -> expr . TIMES expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . LESS_THAN expr
    (34) expr -> expr . GREATER_THAN expr
    (35) expr -> expr . LESS_THAN_EQUALS expr
    (36) expr -> expr . GREATER_THAN_EQUALS expr
    (37) expr -> expr . EQUALS_EQUALS expr
    (38) expr -> expr . NOT_EQUALS expr

    PLUS            reduce using rule 36 (expr -> expr GREATER_THAN_EQUALS expr .)
    MINUS           reduce using rule 36 (expr -> expr GREATER_THAN_EQUALS expr .)
    TIMES           reduce using rule 36 (expr -> expr GREATER_THAN_EQUALS expr .)
    DIVIDE          reduce using rule 36 (expr -> expr GREATER_THAN_EQUALS expr .)
    LESS_THAN       reduce using rule 36 (expr -> expr GREATER_THAN_EQUALS expr .)
    GREATER_THAN    reduce using rule 36 (expr -> expr GREATER_THAN_EQUALS expr .)
    LESS_THAN_EQUALS reduce using rule 36 (expr -> expr GREATER_THAN_EQUALS expr .)
    GREATER_THAN_EQUALS reduce using rule 36 (expr -> expr GREATER_THAN_EQUALS expr .)
    EQUALS_EQUALS   reduce using rule 36 (expr -> expr GREATER_THAN_EQUALS expr .)
    NOT_EQUALS      reduce using rule 36 (expr -> expr GREATER_THAN_EQUALS expr .)
    RBRACE          reduce using rule 36 (expr -> expr GREATER_THAN_EQUALS expr .)
    ID              reduce using rule 36 (expr -> expr GREATER_THAN_EQUALS expr .)
    IF              reduce using rule 36 (expr -> expr GREATER_THAN_EQUALS expr .)
    WHILE           reduce using rule 36 (expr -> expr GREATER_THAN_EQUALS expr .)
    INPUT           reduce using rule 36 (expr -> expr GREATER_THAN_EQUALS expr .)
    OUTPUT          reduce using rule 36 (expr -> expr GREATER_THAN_EQUALS expr .)
    C_CHANNEL       reduce using rule 36 (expr -> expr GREATER_THAN_EQUALS expr .)
    RPAREN          reduce using rule 36 (expr -> expr GREATER_THAN_EQUALS expr .)
    COMMA           reduce using rule 36 (expr -> expr GREATER_THAN_EQUALS expr .)

  ! PLUS            [ shift and go to state 57 ]
  ! MINUS           [ shift and go to state 58 ]
  ! TIMES           [ shift and go to state 59 ]
  ! DIVIDE          [ shift and go to state 60 ]
  ! LESS_THAN       [ shift and go to state 61 ]
  ! GREATER_THAN    [ shift and go to state 62 ]
  ! LESS_THAN_EQUALS [ shift and go to state 63 ]
  ! GREATER_THAN_EQUALS [ shift and go to state 64 ]
  ! EQUALS_EQUALS   [ shift and go to state 65 ]
  ! NOT_EQUALS      [ shift and go to state 66 ]


state 82

    (37) expr -> expr EQUALS_EQUALS expr .
    (29) expr -> expr . PLUS expr
    (30) expr -> expr . MINUS expr
    (31) expr -> expr . TIMES expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . LESS_THAN expr
    (34) expr -> expr . GREATER_THAN expr
    (35) expr -> expr . LESS_THAN_EQUALS expr
    (36) expr -> expr . GREATER_THAN_EQUALS expr
    (37) expr -> expr . EQUALS_EQUALS expr
    (38) expr -> expr . NOT_EQUALS expr

    PLUS            reduce using rule 37 (expr -> expr EQUALS_EQUALS expr .)
    MINUS           reduce using rule 37 (expr -> expr EQUALS_EQUALS expr .)
    TIMES           reduce using rule 37 (expr -> expr EQUALS_EQUALS expr .)
    DIVIDE          reduce using rule 37 (expr -> expr EQUALS_EQUALS expr .)
    LESS_THAN       reduce using rule 37 (expr -> expr EQUALS_EQUALS expr .)
    GREATER_THAN    reduce using rule 37 (expr -> expr EQUALS_EQUALS expr .)
    LESS_THAN_EQUALS reduce using rule 37 (expr -> expr EQUALS_EQUALS expr .)
    GREATER_THAN_EQUALS reduce using rule 37 (expr -> expr EQUALS_EQUALS expr .)
    EQUALS_EQUALS   reduce using rule 37 (expr -> expr EQUALS_EQUALS expr .)
    NOT_EQUALS      reduce using rule 37 (expr -> expr EQUALS_EQUALS expr .)
    RBRACE          reduce using rule 37 (expr -> expr EQUALS_EQUALS expr .)
    ID              reduce using rule 37 (expr -> expr EQUALS_EQUALS expr .)
    IF              reduce using rule 37 (expr -> expr EQUALS_EQUALS expr .)
    WHILE           reduce using rule 37 (expr -> expr EQUALS_EQUALS expr .)
    INPUT           reduce using rule 37 (expr -> expr EQUALS_EQUALS expr .)
    OUTPUT          reduce using rule 37 (expr -> expr EQUALS_EQUALS expr .)
    C_CHANNEL       reduce using rule 37 (expr -> expr EQUALS_EQUALS expr .)
    RPAREN          reduce using rule 37 (expr -> expr EQUALS_EQUALS expr .)
    COMMA           reduce using rule 37 (expr -> expr EQUALS_EQUALS expr .)

  ! PLUS            [ shift and go to state 57 ]
  ! MINUS           [ shift and go to state 58 ]
  ! TIMES           [ shift and go to state 59 ]
  ! DIVIDE          [ shift and go to state 60 ]
  ! LESS_THAN       [ shift and go to state 61 ]
  ! GREATER_THAN    [ shift and go to state 62 ]
  ! LESS_THAN_EQUALS [ shift and go to state 63 ]
  ! GREATER_THAN_EQUALS [ shift and go to state 64 ]
  ! EQUALS_EQUALS   [ shift and go to state 65 ]
  ! NOT_EQUALS      [ shift and go to state 66 ]


state 83

    (38) expr -> expr NOT_EQUALS expr .
    (29) expr -> expr . PLUS expr
    (30) expr -> expr . MINUS expr
    (31) expr -> expr . TIMES expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . LESS_THAN expr
    (34) expr -> expr . GREATER_THAN expr
    (35) expr -> expr . LESS_THAN_EQUALS expr
    (36) expr -> expr . GREATER_THAN_EQUALS expr
    (37) expr -> expr . EQUALS_EQUALS expr
    (38) expr -> expr . NOT_EQUALS expr

    PLUS            reduce using rule 38 (expr -> expr NOT_EQUALS expr .)
    MINUS           reduce using rule 38 (expr -> expr NOT_EQUALS expr .)
    TIMES           reduce using rule 38 (expr -> expr NOT_EQUALS expr .)
    DIVIDE          reduce using rule 38 (expr -> expr NOT_EQUALS expr .)
    LESS_THAN       reduce using rule 38 (expr -> expr NOT_EQUALS expr .)
    GREATER_THAN    reduce using rule 38 (expr -> expr NOT_EQUALS expr .)
    LESS_THAN_EQUALS reduce using rule 38 (expr -> expr NOT_EQUALS expr .)
    GREATER_THAN_EQUALS reduce using rule 38 (expr -> expr NOT_EQUALS expr .)
    EQUALS_EQUALS   reduce using rule 38 (expr -> expr NOT_EQUALS expr .)
    NOT_EQUALS      reduce using rule 38 (expr -> expr NOT_EQUALS expr .)
    RBRACE          reduce using rule 38 (expr -> expr NOT_EQUALS expr .)
    ID              reduce using rule 38 (expr -> expr NOT_EQUALS expr .)
    IF              reduce using rule 38 (expr -> expr NOT_EQUALS expr .)
    WHILE           reduce using rule 38 (expr -> expr NOT_EQUALS expr .)
    INPUT           reduce using rule 38 (expr -> expr NOT_EQUALS expr .)
    OUTPUT          reduce using rule 38 (expr -> expr NOT_EQUALS expr .)
    C_CHANNEL       reduce using rule 38 (expr -> expr NOT_EQUALS expr .)
    RPAREN          reduce using rule 38 (expr -> expr NOT_EQUALS expr .)
    COMMA           reduce using rule 38 (expr -> expr NOT_EQUALS expr .)

  ! PLUS            [ shift and go to state 57 ]
  ! MINUS           [ shift and go to state 58 ]
  ! TIMES           [ shift and go to state 59 ]
  ! DIVIDE          [ shift and go to state 60 ]
  ! LESS_THAN       [ shift and go to state 61 ]
  ! GREATER_THAN    [ shift and go to state 62 ]
  ! LESS_THAN_EQUALS [ shift and go to state 63 ]
  ! GREATER_THAN_EQUALS [ shift and go to state 64 ]
  ! EQUALS_EQUALS   [ shift and go to state 65 ]
  ! NOT_EQUALS      [ shift and go to state 66 ]


state 84

    (45) send_stmt -> ID DOT SEND LPAREN ID . COMMA expr COMMA expr COMMA expr RPAREN
    (46) send_stmt -> ID DOT SEND LPAREN ID . RPAREN

    COMMA           shift and go to state 90
    RPAREN          shift and go to state 91


state 85

    (47) receive_stmt -> ID DOT RECEIVE LPAREN ID . COMMA expr COMMA expr COMMA expr RPAREN
    (48) receive_stmt -> ID DOT RECEIVE LPAREN ID . RPAREN

    COMMA           shift and go to state 92
    RPAREN          shift and go to state 93


state 86

    (8) bloco_IF -> IF LPAREN bool RPAREN LBRACE . stmts RBRACE
    (14) stmts -> . stmt
    (15) stmts -> . stmts stmt
    (16) stmt -> . atribuicao
    (17) stmt -> . bloco_IF
    (18) stmt -> . bloco_WHILE
    (19) stmt -> . bloco_INPUT
    (20) stmt -> . bloco_OUTPUT
    (21) stmt -> . c_channel
    (22) stmt -> . c_channel_stmt
    (23) atribuicao -> . ID EQUALS expr
    (24) atribuicao -> . ID EQUALS STRING
    (25) atribuicao -> . ID EQUALS bloco_INPUT
    (26) atribuicao -> . ID EQUALS receive_stmt
    (8) bloco_IF -> . IF LPAREN bool RPAREN LBRACE stmts RBRACE
    (9) bloco_WHILE -> . WHILE LPAREN bool RPAREN LBRACE stmts RBRACE
    (10) bloco_INPUT -> . INPUT LPAREN RPAREN
    (11) bloco_OUTPUT -> . OUTPUT LPAREN output_args RPAREN
    (42) c_channel -> . C_CHANNEL ID LPAREN STRING COMMA STRING RPAREN
    (43) c_channel_stmt -> . send_stmt
    (44) c_channel_stmt -> . receive_stmt
    (45) send_stmt -> . ID DOT SEND LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN
    (46) send_stmt -> . ID DOT SEND LPAREN ID RPAREN
    (47) receive_stmt -> . ID DOT RECEIVE LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN
    (48) receive_stmt -> . ID DOT RECEIVE LPAREN ID RPAREN

    ID              shift and go to state 20
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    INPUT           shift and go to state 24
    OUTPUT          shift and go to state 25
    C_CHANNEL       shift and go to state 26

    stmts                          shift and go to state 94
    stmt                           shift and go to state 12
    atribuicao                     shift and go to state 13
    bloco_IF                       shift and go to state 14
    bloco_WHILE                    shift and go to state 15
    bloco_INPUT                    shift and go to state 16
    bloco_OUTPUT                   shift and go to state 17
    c_channel                      shift and go to state 18
    c_channel_stmt                 shift and go to state 19
    receive_stmt                   shift and go to state 21
    send_stmt                      shift and go to state 27

state 87

    (9) bloco_WHILE -> WHILE LPAREN bool RPAREN LBRACE . stmts RBRACE
    (14) stmts -> . stmt
    (15) stmts -> . stmts stmt
    (16) stmt -> . atribuicao
    (17) stmt -> . bloco_IF
    (18) stmt -> . bloco_WHILE
    (19) stmt -> . bloco_INPUT
    (20) stmt -> . bloco_OUTPUT
    (21) stmt -> . c_channel
    (22) stmt -> . c_channel_stmt
    (23) atribuicao -> . ID EQUALS expr
    (24) atribuicao -> . ID EQUALS STRING
    (25) atribuicao -> . ID EQUALS bloco_INPUT
    (26) atribuicao -> . ID EQUALS receive_stmt
    (8) bloco_IF -> . IF LPAREN bool RPAREN LBRACE stmts RBRACE
    (9) bloco_WHILE -> . WHILE LPAREN bool RPAREN LBRACE stmts RBRACE
    (10) bloco_INPUT -> . INPUT LPAREN RPAREN
    (11) bloco_OUTPUT -> . OUTPUT LPAREN output_args RPAREN
    (42) c_channel -> . C_CHANNEL ID LPAREN STRING COMMA STRING RPAREN
    (43) c_channel_stmt -> . send_stmt
    (44) c_channel_stmt -> . receive_stmt
    (45) send_stmt -> . ID DOT SEND LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN
    (46) send_stmt -> . ID DOT SEND LPAREN ID RPAREN
    (47) receive_stmt -> . ID DOT RECEIVE LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN
    (48) receive_stmt -> . ID DOT RECEIVE LPAREN ID RPAREN

    ID              shift and go to state 20
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    INPUT           shift and go to state 24
    OUTPUT          shift and go to state 25
    C_CHANNEL       shift and go to state 26

    stmts                          shift and go to state 95
    stmt                           shift and go to state 12
    atribuicao                     shift and go to state 13
    bloco_IF                       shift and go to state 14
    bloco_WHILE                    shift and go to state 15
    bloco_INPUT                    shift and go to state 16
    bloco_OUTPUT                   shift and go to state 17
    c_channel                      shift and go to state 18
    c_channel_stmt                 shift and go to state 19
    receive_stmt                   shift and go to state 21
    send_stmt                      shift and go to state 27

state 88

    (13) output_args -> output_args COMMA expr .
    (29) expr -> expr . PLUS expr
    (30) expr -> expr . MINUS expr
    (31) expr -> expr . TIMES expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . LESS_THAN expr
    (34) expr -> expr . GREATER_THAN expr
    (35) expr -> expr . LESS_THAN_EQUALS expr
    (36) expr -> expr . GREATER_THAN_EQUALS expr
    (37) expr -> expr . EQUALS_EQUALS expr
    (38) expr -> expr . NOT_EQUALS expr

    RPAREN          reduce using rule 13 (output_args -> output_args COMMA expr .)
    COMMA           reduce using rule 13 (output_args -> output_args COMMA expr .)
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    TIMES           shift and go to state 59
    DIVIDE          shift and go to state 60
    LESS_THAN       shift and go to state 61
    GREATER_THAN    shift and go to state 62
    LESS_THAN_EQUALS shift and go to state 63
    GREATER_THAN_EQUALS shift and go to state 64
    EQUALS_EQUALS   shift and go to state 65
    NOT_EQUALS      shift and go to state 66


state 89

    (42) c_channel -> C_CHANNEL ID LPAREN STRING COMMA . STRING RPAREN

    STRING          shift and go to state 96


state 90

    (45) send_stmt -> ID DOT SEND LPAREN ID COMMA . expr COMMA expr COMMA expr RPAREN
    (27) expr -> . INT
    (28) expr -> . STRING
    (29) expr -> . expr PLUS expr
    (30) expr -> . expr MINUS expr
    (31) expr -> . expr TIMES expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr LESS_THAN expr
    (34) expr -> . expr GREATER_THAN expr
    (35) expr -> . expr LESS_THAN_EQUALS expr
    (36) expr -> . expr GREATER_THAN_EQUALS expr
    (37) expr -> . expr EQUALS_EQUALS expr
    (38) expr -> . expr NOT_EQUALS expr
    (39) expr -> . ID

    INT             shift and go to state 44
    STRING          shift and go to state 49
    ID              shift and go to state 50

    expr                           shift and go to state 97

state 91

    (46) send_stmt -> ID DOT SEND LPAREN ID RPAREN .

    RBRACE          reduce using rule 46 (send_stmt -> ID DOT SEND LPAREN ID RPAREN .)
    ID              reduce using rule 46 (send_stmt -> ID DOT SEND LPAREN ID RPAREN .)
    IF              reduce using rule 46 (send_stmt -> ID DOT SEND LPAREN ID RPAREN .)
    WHILE           reduce using rule 46 (send_stmt -> ID DOT SEND LPAREN ID RPAREN .)
    INPUT           reduce using rule 46 (send_stmt -> ID DOT SEND LPAREN ID RPAREN .)
    OUTPUT          reduce using rule 46 (send_stmt -> ID DOT SEND LPAREN ID RPAREN .)
    C_CHANNEL       reduce using rule 46 (send_stmt -> ID DOT SEND LPAREN ID RPAREN .)


state 92

    (47) receive_stmt -> ID DOT RECEIVE LPAREN ID COMMA . expr COMMA expr COMMA expr RPAREN
    (27) expr -> . INT
    (28) expr -> . STRING
    (29) expr -> . expr PLUS expr
    (30) expr -> . expr MINUS expr
    (31) expr -> . expr TIMES expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr LESS_THAN expr
    (34) expr -> . expr GREATER_THAN expr
    (35) expr -> . expr LESS_THAN_EQUALS expr
    (36) expr -> . expr GREATER_THAN_EQUALS expr
    (37) expr -> . expr EQUALS_EQUALS expr
    (38) expr -> . expr NOT_EQUALS expr
    (39) expr -> . ID

    INT             shift and go to state 44
    STRING          shift and go to state 49
    ID              shift and go to state 50

    expr                           shift and go to state 98

state 93

    (48) receive_stmt -> ID DOT RECEIVE LPAREN ID RPAREN .

    RBRACE          reduce using rule 48 (receive_stmt -> ID DOT RECEIVE LPAREN ID RPAREN .)
    ID              reduce using rule 48 (receive_stmt -> ID DOT RECEIVE LPAREN ID RPAREN .)
    IF              reduce using rule 48 (receive_stmt -> ID DOT RECEIVE LPAREN ID RPAREN .)
    WHILE           reduce using rule 48 (receive_stmt -> ID DOT RECEIVE LPAREN ID RPAREN .)
    INPUT           reduce using rule 48 (receive_stmt -> ID DOT RECEIVE LPAREN ID RPAREN .)
    OUTPUT          reduce using rule 48 (receive_stmt -> ID DOT RECEIVE LPAREN ID RPAREN .)
    C_CHANNEL       reduce using rule 48 (receive_stmt -> ID DOT RECEIVE LPAREN ID RPAREN .)


state 94

    (8) bloco_IF -> IF LPAREN bool RPAREN LBRACE stmts . RBRACE
    (15) stmts -> stmts . stmt
    (16) stmt -> . atribuicao
    (17) stmt -> . bloco_IF
    (18) stmt -> . bloco_WHILE
    (19) stmt -> . bloco_INPUT
    (20) stmt -> . bloco_OUTPUT
    (21) stmt -> . c_channel
    (22) stmt -> . c_channel_stmt
    (23) atribuicao -> . ID EQUALS expr
    (24) atribuicao -> . ID EQUALS STRING
    (25) atribuicao -> . ID EQUALS bloco_INPUT
    (26) atribuicao -> . ID EQUALS receive_stmt
    (8) bloco_IF -> . IF LPAREN bool RPAREN LBRACE stmts RBRACE
    (9) bloco_WHILE -> . WHILE LPAREN bool RPAREN LBRACE stmts RBRACE
    (10) bloco_INPUT -> . INPUT LPAREN RPAREN
    (11) bloco_OUTPUT -> . OUTPUT LPAREN output_args RPAREN
    (42) c_channel -> . C_CHANNEL ID LPAREN STRING COMMA STRING RPAREN
    (43) c_channel_stmt -> . send_stmt
    (44) c_channel_stmt -> . receive_stmt
    (45) send_stmt -> . ID DOT SEND LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN
    (46) send_stmt -> . ID DOT SEND LPAREN ID RPAREN
    (47) receive_stmt -> . ID DOT RECEIVE LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN
    (48) receive_stmt -> . ID DOT RECEIVE LPAREN ID RPAREN

    RBRACE          shift and go to state 99
    ID              shift and go to state 20
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    INPUT           shift and go to state 24
    OUTPUT          shift and go to state 25
    C_CHANNEL       shift and go to state 26

    stmt                           shift and go to state 30
    atribuicao                     shift and go to state 13
    bloco_IF                       shift and go to state 14
    bloco_WHILE                    shift and go to state 15
    bloco_INPUT                    shift and go to state 16
    bloco_OUTPUT                   shift and go to state 17
    c_channel                      shift and go to state 18
    c_channel_stmt                 shift and go to state 19
    receive_stmt                   shift and go to state 21
    send_stmt                      shift and go to state 27

state 95

    (9) bloco_WHILE -> WHILE LPAREN bool RPAREN LBRACE stmts . RBRACE
    (15) stmts -> stmts . stmt
    (16) stmt -> . atribuicao
    (17) stmt -> . bloco_IF
    (18) stmt -> . bloco_WHILE
    (19) stmt -> . bloco_INPUT
    (20) stmt -> . bloco_OUTPUT
    (21) stmt -> . c_channel
    (22) stmt -> . c_channel_stmt
    (23) atribuicao -> . ID EQUALS expr
    (24) atribuicao -> . ID EQUALS STRING
    (25) atribuicao -> . ID EQUALS bloco_INPUT
    (26) atribuicao -> . ID EQUALS receive_stmt
    (8) bloco_IF -> . IF LPAREN bool RPAREN LBRACE stmts RBRACE
    (9) bloco_WHILE -> . WHILE LPAREN bool RPAREN LBRACE stmts RBRACE
    (10) bloco_INPUT -> . INPUT LPAREN RPAREN
    (11) bloco_OUTPUT -> . OUTPUT LPAREN output_args RPAREN
    (42) c_channel -> . C_CHANNEL ID LPAREN STRING COMMA STRING RPAREN
    (43) c_channel_stmt -> . send_stmt
    (44) c_channel_stmt -> . receive_stmt
    (45) send_stmt -> . ID DOT SEND LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN
    (46) send_stmt -> . ID DOT SEND LPAREN ID RPAREN
    (47) receive_stmt -> . ID DOT RECEIVE LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN
    (48) receive_stmt -> . ID DOT RECEIVE LPAREN ID RPAREN

    RBRACE          shift and go to state 100
    ID              shift and go to state 20
    IF              shift and go to state 22
    WHILE           shift and go to state 23
    INPUT           shift and go to state 24
    OUTPUT          shift and go to state 25
    C_CHANNEL       shift and go to state 26

    stmt                           shift and go to state 30
    atribuicao                     shift and go to state 13
    bloco_IF                       shift and go to state 14
    bloco_WHILE                    shift and go to state 15
    bloco_INPUT                    shift and go to state 16
    bloco_OUTPUT                   shift and go to state 17
    c_channel                      shift and go to state 18
    c_channel_stmt                 shift and go to state 19
    receive_stmt                   shift and go to state 21
    send_stmt                      shift and go to state 27

state 96

    (42) c_channel -> C_CHANNEL ID LPAREN STRING COMMA STRING . RPAREN

    RPAREN          shift and go to state 101


state 97

    (45) send_stmt -> ID DOT SEND LPAREN ID COMMA expr . COMMA expr COMMA expr RPAREN
    (29) expr -> expr . PLUS expr
    (30) expr -> expr . MINUS expr
    (31) expr -> expr . TIMES expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . LESS_THAN expr
    (34) expr -> expr . GREATER_THAN expr
    (35) expr -> expr . LESS_THAN_EQUALS expr
    (36) expr -> expr . GREATER_THAN_EQUALS expr
    (37) expr -> expr . EQUALS_EQUALS expr
    (38) expr -> expr . NOT_EQUALS expr

    COMMA           shift and go to state 102
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    TIMES           shift and go to state 59
    DIVIDE          shift and go to state 60
    LESS_THAN       shift and go to state 61
    GREATER_THAN    shift and go to state 62
    LESS_THAN_EQUALS shift and go to state 63
    GREATER_THAN_EQUALS shift and go to state 64
    EQUALS_EQUALS   shift and go to state 65
    NOT_EQUALS      shift and go to state 66


state 98

    (47) receive_stmt -> ID DOT RECEIVE LPAREN ID COMMA expr . COMMA expr COMMA expr RPAREN
    (29) expr -> expr . PLUS expr
    (30) expr -> expr . MINUS expr
    (31) expr -> expr . TIMES expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . LESS_THAN expr
    (34) expr -> expr . GREATER_THAN expr
    (35) expr -> expr . LESS_THAN_EQUALS expr
    (36) expr -> expr . GREATER_THAN_EQUALS expr
    (37) expr -> expr . EQUALS_EQUALS expr
    (38) expr -> expr . NOT_EQUALS expr

    COMMA           shift and go to state 103
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    TIMES           shift and go to state 59
    DIVIDE          shift and go to state 60
    LESS_THAN       shift and go to state 61
    GREATER_THAN    shift and go to state 62
    LESS_THAN_EQUALS shift and go to state 63
    GREATER_THAN_EQUALS shift and go to state 64
    EQUALS_EQUALS   shift and go to state 65
    NOT_EQUALS      shift and go to state 66


state 99

    (8) bloco_IF -> IF LPAREN bool RPAREN LBRACE stmts RBRACE .

    RBRACE          reduce using rule 8 (bloco_IF -> IF LPAREN bool RPAREN LBRACE stmts RBRACE .)
    ID              reduce using rule 8 (bloco_IF -> IF LPAREN bool RPAREN LBRACE stmts RBRACE .)
    IF              reduce using rule 8 (bloco_IF -> IF LPAREN bool RPAREN LBRACE stmts RBRACE .)
    WHILE           reduce using rule 8 (bloco_IF -> IF LPAREN bool RPAREN LBRACE stmts RBRACE .)
    INPUT           reduce using rule 8 (bloco_IF -> IF LPAREN bool RPAREN LBRACE stmts RBRACE .)
    OUTPUT          reduce using rule 8 (bloco_IF -> IF LPAREN bool RPAREN LBRACE stmts RBRACE .)
    C_CHANNEL       reduce using rule 8 (bloco_IF -> IF LPAREN bool RPAREN LBRACE stmts RBRACE .)


state 100

    (9) bloco_WHILE -> WHILE LPAREN bool RPAREN LBRACE stmts RBRACE .

    RBRACE          reduce using rule 9 (bloco_WHILE -> WHILE LPAREN bool RPAREN LBRACE stmts RBRACE .)
    ID              reduce using rule 9 (bloco_WHILE -> WHILE LPAREN bool RPAREN LBRACE stmts RBRACE .)
    IF              reduce using rule 9 (bloco_WHILE -> WHILE LPAREN bool RPAREN LBRACE stmts RBRACE .)
    WHILE           reduce using rule 9 (bloco_WHILE -> WHILE LPAREN bool RPAREN LBRACE stmts RBRACE .)
    INPUT           reduce using rule 9 (bloco_WHILE -> WHILE LPAREN bool RPAREN LBRACE stmts RBRACE .)
    OUTPUT          reduce using rule 9 (bloco_WHILE -> WHILE LPAREN bool RPAREN LBRACE stmts RBRACE .)
    C_CHANNEL       reduce using rule 9 (bloco_WHILE -> WHILE LPAREN bool RPAREN LBRACE stmts RBRACE .)


state 101

    (42) c_channel -> C_CHANNEL ID LPAREN STRING COMMA STRING RPAREN .

    RBRACE          reduce using rule 42 (c_channel -> C_CHANNEL ID LPAREN STRING COMMA STRING RPAREN .)
    ID              reduce using rule 42 (c_channel -> C_CHANNEL ID LPAREN STRING COMMA STRING RPAREN .)
    IF              reduce using rule 42 (c_channel -> C_CHANNEL ID LPAREN STRING COMMA STRING RPAREN .)
    WHILE           reduce using rule 42 (c_channel -> C_CHANNEL ID LPAREN STRING COMMA STRING RPAREN .)
    INPUT           reduce using rule 42 (c_channel -> C_CHANNEL ID LPAREN STRING COMMA STRING RPAREN .)
    OUTPUT          reduce using rule 42 (c_channel -> C_CHANNEL ID LPAREN STRING COMMA STRING RPAREN .)
    C_CHANNEL       reduce using rule 42 (c_channel -> C_CHANNEL ID LPAREN STRING COMMA STRING RPAREN .)


state 102

    (45) send_stmt -> ID DOT SEND LPAREN ID COMMA expr COMMA . expr COMMA expr RPAREN
    (27) expr -> . INT
    (28) expr -> . STRING
    (29) expr -> . expr PLUS expr
    (30) expr -> . expr MINUS expr
    (31) expr -> . expr TIMES expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr LESS_THAN expr
    (34) expr -> . expr GREATER_THAN expr
    (35) expr -> . expr LESS_THAN_EQUALS expr
    (36) expr -> . expr GREATER_THAN_EQUALS expr
    (37) expr -> . expr EQUALS_EQUALS expr
    (38) expr -> . expr NOT_EQUALS expr
    (39) expr -> . ID

    INT             shift and go to state 44
    STRING          shift and go to state 49
    ID              shift and go to state 50

    expr                           shift and go to state 104

state 103

    (47) receive_stmt -> ID DOT RECEIVE LPAREN ID COMMA expr COMMA . expr COMMA expr RPAREN
    (27) expr -> . INT
    (28) expr -> . STRING
    (29) expr -> . expr PLUS expr
    (30) expr -> . expr MINUS expr
    (31) expr -> . expr TIMES expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr LESS_THAN expr
    (34) expr -> . expr GREATER_THAN expr
    (35) expr -> . expr LESS_THAN_EQUALS expr
    (36) expr -> . expr GREATER_THAN_EQUALS expr
    (37) expr -> . expr EQUALS_EQUALS expr
    (38) expr -> . expr NOT_EQUALS expr
    (39) expr -> . ID

    INT             shift and go to state 44
    STRING          shift and go to state 49
    ID              shift and go to state 50

    expr                           shift and go to state 105

state 104

    (45) send_stmt -> ID DOT SEND LPAREN ID COMMA expr COMMA expr . COMMA expr RPAREN
    (29) expr -> expr . PLUS expr
    (30) expr -> expr . MINUS expr
    (31) expr -> expr . TIMES expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . LESS_THAN expr
    (34) expr -> expr . GREATER_THAN expr
    (35) expr -> expr . LESS_THAN_EQUALS expr
    (36) expr -> expr . GREATER_THAN_EQUALS expr
    (37) expr -> expr . EQUALS_EQUALS expr
    (38) expr -> expr . NOT_EQUALS expr

    COMMA           shift and go to state 106
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    TIMES           shift and go to state 59
    DIVIDE          shift and go to state 60
    LESS_THAN       shift and go to state 61
    GREATER_THAN    shift and go to state 62
    LESS_THAN_EQUALS shift and go to state 63
    GREATER_THAN_EQUALS shift and go to state 64
    EQUALS_EQUALS   shift and go to state 65
    NOT_EQUALS      shift and go to state 66


state 105

    (47) receive_stmt -> ID DOT RECEIVE LPAREN ID COMMA expr COMMA expr . COMMA expr RPAREN
    (29) expr -> expr . PLUS expr
    (30) expr -> expr . MINUS expr
    (31) expr -> expr . TIMES expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . LESS_THAN expr
    (34) expr -> expr . GREATER_THAN expr
    (35) expr -> expr . LESS_THAN_EQUALS expr
    (36) expr -> expr . GREATER_THAN_EQUALS expr
    (37) expr -> expr . EQUALS_EQUALS expr
    (38) expr -> expr . NOT_EQUALS expr

    COMMA           shift and go to state 107
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    TIMES           shift and go to state 59
    DIVIDE          shift and go to state 60
    LESS_THAN       shift and go to state 61
    GREATER_THAN    shift and go to state 62
    LESS_THAN_EQUALS shift and go to state 63
    GREATER_THAN_EQUALS shift and go to state 64
    EQUALS_EQUALS   shift and go to state 65
    NOT_EQUALS      shift and go to state 66


state 106

    (45) send_stmt -> ID DOT SEND LPAREN ID COMMA expr COMMA expr COMMA . expr RPAREN
    (27) expr -> . INT
    (28) expr -> . STRING
    (29) expr -> . expr PLUS expr
    (30) expr -> . expr MINUS expr
    (31) expr -> . expr TIMES expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr LESS_THAN expr
    (34) expr -> . expr GREATER_THAN expr
    (35) expr -> . expr LESS_THAN_EQUALS expr
    (36) expr -> . expr GREATER_THAN_EQUALS expr
    (37) expr -> . expr EQUALS_EQUALS expr
    (38) expr -> . expr NOT_EQUALS expr
    (39) expr -> . ID

    INT             shift and go to state 44
    STRING          shift and go to state 49
    ID              shift and go to state 50

    expr                           shift and go to state 108

state 107

    (47) receive_stmt -> ID DOT RECEIVE LPAREN ID COMMA expr COMMA expr COMMA . expr RPAREN
    (27) expr -> . INT
    (28) expr -> . STRING
    (29) expr -> . expr PLUS expr
    (30) expr -> . expr MINUS expr
    (31) expr -> . expr TIMES expr
    (32) expr -> . expr DIVIDE expr
    (33) expr -> . expr LESS_THAN expr
    (34) expr -> . expr GREATER_THAN expr
    (35) expr -> . expr LESS_THAN_EQUALS expr
    (36) expr -> . expr GREATER_THAN_EQUALS expr
    (37) expr -> . expr EQUALS_EQUALS expr
    (38) expr -> . expr NOT_EQUALS expr
    (39) expr -> . ID

    INT             shift and go to state 44
    STRING          shift and go to state 49
    ID              shift and go to state 50

    expr                           shift and go to state 109

state 108

    (45) send_stmt -> ID DOT SEND LPAREN ID COMMA expr COMMA expr COMMA expr . RPAREN
    (29) expr -> expr . PLUS expr
    (30) expr -> expr . MINUS expr
    (31) expr -> expr . TIMES expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . LESS_THAN expr
    (34) expr -> expr . GREATER_THAN expr
    (35) expr -> expr . LESS_THAN_EQUALS expr
    (36) expr -> expr . GREATER_THAN_EQUALS expr
    (37) expr -> expr . EQUALS_EQUALS expr
    (38) expr -> expr . NOT_EQUALS expr

    RPAREN          shift and go to state 110
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    TIMES           shift and go to state 59
    DIVIDE          shift and go to state 60
    LESS_THAN       shift and go to state 61
    GREATER_THAN    shift and go to state 62
    LESS_THAN_EQUALS shift and go to state 63
    GREATER_THAN_EQUALS shift and go to state 64
    EQUALS_EQUALS   shift and go to state 65
    NOT_EQUALS      shift and go to state 66


state 109

    (47) receive_stmt -> ID DOT RECEIVE LPAREN ID COMMA expr COMMA expr COMMA expr . RPAREN
    (29) expr -> expr . PLUS expr
    (30) expr -> expr . MINUS expr
    (31) expr -> expr . TIMES expr
    (32) expr -> expr . DIVIDE expr
    (33) expr -> expr . LESS_THAN expr
    (34) expr -> expr . GREATER_THAN expr
    (35) expr -> expr . LESS_THAN_EQUALS expr
    (36) expr -> expr . GREATER_THAN_EQUALS expr
    (37) expr -> expr . EQUALS_EQUALS expr
    (38) expr -> expr . NOT_EQUALS expr

    RPAREN          shift and go to state 111
    PLUS            shift and go to state 57
    MINUS           shift and go to state 58
    TIMES           shift and go to state 59
    DIVIDE          shift and go to state 60
    LESS_THAN       shift and go to state 61
    GREATER_THAN    shift and go to state 62
    LESS_THAN_EQUALS shift and go to state 63
    GREATER_THAN_EQUALS shift and go to state 64
    EQUALS_EQUALS   shift and go to state 65
    NOT_EQUALS      shift and go to state 66


state 110

    (45) send_stmt -> ID DOT SEND LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN .

    RBRACE          reduce using rule 45 (send_stmt -> ID DOT SEND LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN .)
    ID              reduce using rule 45 (send_stmt -> ID DOT SEND LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN .)
    IF              reduce using rule 45 (send_stmt -> ID DOT SEND LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN .)
    WHILE           reduce using rule 45 (send_stmt -> ID DOT SEND LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN .)
    INPUT           reduce using rule 45 (send_stmt -> ID DOT SEND LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN .)
    OUTPUT          reduce using rule 45 (send_stmt -> ID DOT SEND LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN .)
    C_CHANNEL       reduce using rule 45 (send_stmt -> ID DOT SEND LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN .)


state 111

    (47) receive_stmt -> ID DOT RECEIVE LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN .

    RBRACE          reduce using rule 47 (receive_stmt -> ID DOT RECEIVE LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN .)
    ID              reduce using rule 47 (receive_stmt -> ID DOT RECEIVE LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN .)
    IF              reduce using rule 47 (receive_stmt -> ID DOT RECEIVE LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN .)
    WHILE           reduce using rule 47 (receive_stmt -> ID DOT RECEIVE LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN .)
    INPUT           reduce using rule 47 (receive_stmt -> ID DOT RECEIVE LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN .)
    OUTPUT          reduce using rule 47 (receive_stmt -> ID DOT RECEIVE LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN .)
    C_CHANNEL       reduce using rule 47 (receive_stmt -> ID DOT RECEIVE LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 41 resolved using rule (atribuicao -> ID EQUALS STRING)
WARNING: rejected rule (expr -> STRING) in state 41
