
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEnonassocLESS_THANGREATER_THANLESS_THAN_EQUALSGREATER_THAN_EQUALSEQUALS_EQUALSNOT_EQUALSCOMMA COMMENT C_CHANNEL DIVIDE DOT ELSE EOF EQUALS EQUALS_EQUALS FLOAT GREATER_THAN GREATER_THAN_EQUALS ID IF INPUT INT LBRACE LESS_THAN LESS_THAN_EQUALS LPAREN MINUS NOT_EQUALS OUTPUT PAR PLUS RBRACE RECEIVE RPAREN SEND SEQ STRING TIMES WHILEprograma_minipar : bloco_stmtbloco_stmt : bloco_SEQ\n| bloco_PAR\n| bloco_stmt bloco_SEQ\n| bloco_stmt bloco_PARbloco_SEQ : SEQ LBRACE stmts RBRACEbloco_PAR : PAR LBRACE stmts RBRACEbloco_IF : IF LPAREN bool RPAREN LBRACE stmts RBRACEbloco_WHILE : WHILE LPAREN bool RPAREN LBRACE stmts RBRACEbloco_INPUT : INPUT LPAREN RPARENbloco_OUTPUT : OUTPUT LPAREN output_args RPARENoutput_args : expr\n| output_args COMMA exprstmts : stmt\n| stmts stmtstmt : atribuicao\n| bloco_IF\n| bloco_WHILE\n| bloco_INPUT\n| bloco_OUTPUT\n| c_channel\n| c_channel_stmtatribuicao : ID EQUALS expr\n| ID EQUALS STRING\n| ID EQUALS bloco_INPUT\n| ID EQUALS receive_stmtexpr : INT\n| STRING\n| expr PLUS expr\n| expr MINUS expr\n| expr TIMES expr\n| expr DIVIDE expr\n| expr LESS_THAN expr\n| expr GREATER_THAN expr\n| expr LESS_THAN_EQUALS expr\n| expr GREATER_THAN_EQUALS expr\n| expr EQUALS_EQUALS expr\n| expr NOT_EQUALS expr\nexpr : IDbool : exprcomment : COMMENTc_channel : C_CHANNEL ID LPAREN STRING COMMA STRING RPARENc_channel_stmt : send_stmt\n| receive_stmtsend_stmt : ID DOT SEND LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN\n| ID DOT SEND LPAREN ID RPARENreceive_stmt : ID DOT RECEIVE LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN\n| ID DOT RECEIVE LPAREN ID RPAREN'
    
_lr_action_items = {'SEQ':([0,2,3,4,7,8,29,38,],[5,5,-2,-3,-4,-5,-6,-7,]),'PAR':([0,2,3,4,7,8,29,38,],[6,6,-2,-3,-4,-5,-6,-7,]),'$end':([1,2,3,4,7,8,29,38,],[0,-1,-2,-3,-4,-5,-6,-7,]),'LBRACE':([5,6,69,70,],[9,10,86,87,]),'ID':([9,10,11,12,13,14,15,16,17,18,19,21,26,27,28,30,31,33,34,36,39,40,41,42,43,44,49,50,52,57,58,59,60,61,62,63,64,65,66,67,68,71,72,74,75,76,77,78,79,80,81,82,83,86,87,90,91,92,93,94,95,99,100,101,102,103,106,107,110,111,],[20,20,20,-14,-16,-17,-18,-19,-20,-21,-22,-44,37,-43,20,-15,39,50,50,50,-39,-23,-24,-25,-26,-27,-28,-39,-10,50,50,50,50,50,50,50,50,50,50,84,85,-11,50,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,20,20,50,-46,50,-48,20,20,-8,-9,-42,50,50,50,50,-45,-47,]),'IF':([9,10,11,12,13,14,15,16,17,18,19,21,27,28,30,39,40,41,42,43,44,49,50,52,71,74,75,76,77,78,79,80,81,82,83,86,87,91,93,94,95,99,100,101,110,111,],[22,22,22,-14,-16,-17,-18,-19,-20,-21,-22,-44,-43,22,-15,-39,-23,-24,-25,-26,-27,-28,-39,-10,-11,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,22,22,-46,-48,22,22,-8,-9,-42,-45,-47,]),'WHILE':([9,10,11,12,13,14,15,16,17,18,19,21,27,28,30,39,40,41,42,43,44,49,50,52,71,74,75,76,77,78,79,80,81,82,83,86,87,91,93,94,95,99,100,101,110,111,],[23,23,23,-14,-16,-17,-18,-19,-20,-21,-22,-44,-43,23,-15,-39,-23,-24,-25,-26,-27,-28,-39,-10,-11,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,23,23,-46,-48,23,23,-8,-9,-42,-45,-47,]),'INPUT':([9,10,11,12,13,14,15,16,17,18,19,21,27,28,30,31,39,40,41,42,43,44,49,50,52,71,74,75,76,77,78,79,80,81,82,83,86,87,91,93,94,95,99,100,101,110,111,],[24,24,24,-14,-16,-17,-18,-19,-20,-21,-22,-44,-43,24,-15,24,-39,-23,-24,-25,-26,-27,-28,-39,-10,-11,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,24,24,-46,-48,24,24,-8,-9,-42,-45,-47,]),'OUTPUT':([9,10,11,12,13,14,15,16,17,18,19,21,27,28,30,39,40,41,42,43,44,49,50,52,71,74,75,76,77,78,79,80,81,82,83,86,87,91,93,94,95,99,100,101,110,111,],[25,25,25,-14,-16,-17,-18,-19,-20,-21,-22,-44,-43,25,-15,-39,-23,-24,-25,-26,-27,-28,-39,-10,-11,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,25,25,-46,-48,25,25,-8,-9,-42,-45,-47,]),'C_CHANNEL':([9,10,11,12,13,14,15,16,17,18,19,21,27,28,30,39,40,41,42,43,44,49,50,52,71,74,75,76,77,78,79,80,81,82,83,86,87,91,93,94,95,99,100,101,110,111,],[26,26,26,-14,-16,-17,-18,-19,-20,-21,-22,-44,-43,26,-15,-39,-23,-24,-25,-26,-27,-28,-39,-10,-11,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,26,26,-46,-48,26,26,-8,-9,-42,-45,-47,]),'RBRACE':([11,12,13,14,15,16,17,18,19,21,27,28,30,39,40,41,42,43,44,49,50,52,71,74,75,76,77,78,79,80,81,82,83,91,93,94,95,99,100,101,110,111,],[29,-14,-16,-17,-18,-19,-20,-21,-22,-44,-43,38,-15,-39,-23,-24,-25,-26,-27,-28,-39,-10,-11,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-46,-48,99,100,-8,-9,-42,-45,-47,]),'EQUALS':([20,],[31,]),'DOT':([20,39,],[32,56,]),'LPAREN':([22,23,24,25,37,45,46,],[33,34,35,36,55,67,68,]),'STRING':([31,33,34,36,55,57,58,59,60,61,62,63,64,65,66,72,89,90,92,102,103,106,107,],[41,49,49,49,73,49,49,49,49,49,49,49,49,49,49,49,96,49,49,49,49,49,49,]),'INT':([31,33,34,36,57,58,59,60,61,62,63,64,65,66,72,90,92,102,103,106,107,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'SEND':([32,],[45,]),'RECEIVE':([32,56,],[46,46,]),'RPAREN':([35,44,47,48,49,50,51,53,54,74,75,76,77,78,79,80,81,82,83,84,85,88,96,108,109,],[52,-27,69,-40,-28,-39,70,71,-12,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,91,93,-13,101,110,111,]),'PLUS':([39,40,41,44,48,49,50,54,74,75,76,77,78,79,80,81,82,83,88,97,98,104,105,108,109,],[-39,57,-28,-27,57,-28,-39,57,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,57,57,57,57,57,57,57,]),'MINUS':([39,40,41,44,48,49,50,54,74,75,76,77,78,79,80,81,82,83,88,97,98,104,105,108,109,],[-39,58,-28,-27,58,-28,-39,58,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,58,58,58,58,58,58,58,]),'TIMES':([39,40,41,44,48,49,50,54,74,75,76,77,78,79,80,81,82,83,88,97,98,104,105,108,109,],[-39,59,-28,-27,59,-28,-39,59,59,59,-31,-32,-33,-34,-35,-36,-37,-38,59,59,59,59,59,59,59,]),'DIVIDE':([39,40,41,44,48,49,50,54,74,75,76,77,78,79,80,81,82,83,88,97,98,104,105,108,109,],[-39,60,-28,-27,60,-28,-39,60,60,60,-31,-32,-33,-34,-35,-36,-37,-38,60,60,60,60,60,60,60,]),'LESS_THAN':([39,40,41,44,48,49,50,54,74,75,76,77,78,79,80,81,82,83,88,97,98,104,105,108,109,],[-39,61,-28,-27,61,-28,-39,61,61,61,61,61,None,None,None,None,None,None,61,61,61,61,61,61,61,]),'GREATER_THAN':([39,40,41,44,48,49,50,54,74,75,76,77,78,79,80,81,82,83,88,97,98,104,105,108,109,],[-39,62,-28,-27,62,-28,-39,62,62,62,62,62,None,None,None,None,None,None,62,62,62,62,62,62,62,]),'LESS_THAN_EQUALS':([39,40,41,44,48,49,50,54,74,75,76,77,78,79,80,81,82,83,88,97,98,104,105,108,109,],[-39,63,-28,-27,63,-28,-39,63,63,63,63,63,None,None,None,None,None,None,63,63,63,63,63,63,63,]),'GREATER_THAN_EQUALS':([39,40,41,44,48,49,50,54,74,75,76,77,78,79,80,81,82,83,88,97,98,104,105,108,109,],[-39,64,-28,-27,64,-28,-39,64,64,64,64,64,None,None,None,None,None,None,64,64,64,64,64,64,64,]),'EQUALS_EQUALS':([39,40,41,44,48,49,50,54,74,75,76,77,78,79,80,81,82,83,88,97,98,104,105,108,109,],[-39,65,-28,-27,65,-28,-39,65,65,65,65,65,None,None,None,None,None,None,65,65,65,65,65,65,65,]),'NOT_EQUALS':([39,40,41,44,48,49,50,54,74,75,76,77,78,79,80,81,82,83,88,97,98,104,105,108,109,],[-39,66,-28,-27,66,-28,-39,66,66,66,66,66,None,None,None,None,None,None,66,66,66,66,66,66,66,]),'COMMA':([44,49,50,53,54,73,74,75,76,77,78,79,80,81,82,83,84,85,88,97,98,104,105,],[-27,-28,-39,72,-12,89,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,90,92,-13,102,103,106,107,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa_minipar':([0,],[1,]),'bloco_stmt':([0,],[2,]),'bloco_SEQ':([0,2,],[3,7,]),'bloco_PAR':([0,2,],[4,8,]),'stmts':([9,10,86,87,],[11,28,94,95,]),'stmt':([9,10,11,28,86,87,94,95,],[12,12,30,30,12,12,30,30,]),'atribuicao':([9,10,11,28,86,87,94,95,],[13,13,13,13,13,13,13,13,]),'bloco_IF':([9,10,11,28,86,87,94,95,],[14,14,14,14,14,14,14,14,]),'bloco_WHILE':([9,10,11,28,86,87,94,95,],[15,15,15,15,15,15,15,15,]),'bloco_INPUT':([9,10,11,28,31,86,87,94,95,],[16,16,16,16,42,16,16,16,16,]),'bloco_OUTPUT':([9,10,11,28,86,87,94,95,],[17,17,17,17,17,17,17,17,]),'c_channel':([9,10,11,28,86,87,94,95,],[18,18,18,18,18,18,18,18,]),'c_channel_stmt':([9,10,11,28,86,87,94,95,],[19,19,19,19,19,19,19,19,]),'receive_stmt':([9,10,11,28,31,86,87,94,95,],[21,21,21,21,43,21,21,21,21,]),'send_stmt':([9,10,11,28,86,87,94,95,],[27,27,27,27,27,27,27,27,]),'expr':([31,33,34,36,57,58,59,60,61,62,63,64,65,66,72,90,92,102,103,106,107,],[40,48,48,54,74,75,76,77,78,79,80,81,82,83,88,97,98,104,105,108,109,]),'bool':([33,34,],[47,51,]),'output_args':([36,],[53,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa_minipar","S'",1,None,None,None),
  ('programa_minipar -> bloco_stmt','programa_minipar',1,'p_programa_minipar','sintax.py',17),
  ('bloco_stmt -> bloco_SEQ','bloco_stmt',1,'p_bloco_stmt','sintax.py',21),
  ('bloco_stmt -> bloco_PAR','bloco_stmt',1,'p_bloco_stmt','sintax.py',22),
  ('bloco_stmt -> bloco_stmt bloco_SEQ','bloco_stmt',2,'p_bloco_stmt','sintax.py',23),
  ('bloco_stmt -> bloco_stmt bloco_PAR','bloco_stmt',2,'p_bloco_stmt','sintax.py',24),
  ('bloco_SEQ -> SEQ LBRACE stmts RBRACE','bloco_SEQ',4,'p_bloco_SEQ','sintax.py',31),
  ('bloco_PAR -> PAR LBRACE stmts RBRACE','bloco_PAR',4,'p_bloco_PAR','sintax.py',35),
  ('bloco_IF -> IF LPAREN bool RPAREN LBRACE stmts RBRACE','bloco_IF',7,'p_bloco_IF','sintax.py',39),
  ('bloco_WHILE -> WHILE LPAREN bool RPAREN LBRACE stmts RBRACE','bloco_WHILE',7,'p_bloco_WHILE','sintax.py',43),
  ('bloco_INPUT -> INPUT LPAREN RPAREN','bloco_INPUT',3,'p_bloco_INPUT','sintax.py',47),
  ('bloco_OUTPUT -> OUTPUT LPAREN output_args RPAREN','bloco_OUTPUT',4,'p_bloco_OUTPUT','sintax.py',51),
  ('output_args -> expr','output_args',1,'p_output_args','sintax.py',55),
  ('output_args -> output_args COMMA expr','output_args',3,'p_output_args','sintax.py',56),
  ('stmts -> stmt','stmts',1,'p_stmts','sintax.py',63),
  ('stmts -> stmts stmt','stmts',2,'p_stmts','sintax.py',64),
  ('stmt -> atribuicao','stmt',1,'p_stmt','sintax.py',71),
  ('stmt -> bloco_IF','stmt',1,'p_stmt','sintax.py',72),
  ('stmt -> bloco_WHILE','stmt',1,'p_stmt','sintax.py',73),
  ('stmt -> bloco_INPUT','stmt',1,'p_stmt','sintax.py',74),
  ('stmt -> bloco_OUTPUT','stmt',1,'p_stmt','sintax.py',75),
  ('stmt -> c_channel','stmt',1,'p_stmt','sintax.py',76),
  ('stmt -> c_channel_stmt','stmt',1,'p_stmt','sintax.py',77),
  ('atribuicao -> ID EQUALS expr','atribuicao',3,'p_atribuicao','sintax.py',81),
  ('atribuicao -> ID EQUALS STRING','atribuicao',3,'p_atribuicao','sintax.py',82),
  ('atribuicao -> ID EQUALS bloco_INPUT','atribuicao',3,'p_atribuicao','sintax.py',83),
  ('atribuicao -> ID EQUALS receive_stmt','atribuicao',3,'p_atribuicao','sintax.py',84),
  ('expr -> INT','expr',1,'p_expr','sintax.py',91),
  ('expr -> STRING','expr',1,'p_expr','sintax.py',92),
  ('expr -> expr PLUS expr','expr',3,'p_expr','sintax.py',93),
  ('expr -> expr MINUS expr','expr',3,'p_expr','sintax.py',94),
  ('expr -> expr TIMES expr','expr',3,'p_expr','sintax.py',95),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr','sintax.py',96),
  ('expr -> expr LESS_THAN expr','expr',3,'p_expr','sintax.py',97),
  ('expr -> expr GREATER_THAN expr','expr',3,'p_expr','sintax.py',98),
  ('expr -> expr LESS_THAN_EQUALS expr','expr',3,'p_expr','sintax.py',99),
  ('expr -> expr GREATER_THAN_EQUALS expr','expr',3,'p_expr','sintax.py',100),
  ('expr -> expr EQUALS_EQUALS expr','expr',3,'p_expr','sintax.py',101),
  ('expr -> expr NOT_EQUALS expr','expr',3,'p_expr','sintax.py',102),
  ('expr -> ID','expr',1,'p_expr_id','sintax.py',111),
  ('bool -> expr','bool',1,'p_bool','sintax.py',119),
  ('comment -> COMMENT','comment',1,'p_comment','sintax.py',123),
  ('c_channel -> C_CHANNEL ID LPAREN STRING COMMA STRING RPAREN','c_channel',7,'p_c_channel','sintax.py',127),
  ('c_channel_stmt -> send_stmt','c_channel_stmt',1,'p_c_channel_stmt','sintax.py',133),
  ('c_channel_stmt -> receive_stmt','c_channel_stmt',1,'p_c_channel_stmt','sintax.py',134),
  ('send_stmt -> ID DOT SEND LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN','send_stmt',12,'p_send_stmt','sintax.py',138),
  ('send_stmt -> ID DOT SEND LPAREN ID RPAREN','send_stmt',6,'p_send_stmt','sintax.py',139),
  ('receive_stmt -> ID DOT RECEIVE LPAREN ID COMMA expr COMMA expr COMMA expr RPAREN','receive_stmt',12,'p_receive_stmt','sintax.py',150),
  ('receive_stmt -> ID DOT RECEIVE LPAREN ID RPAREN','receive_stmt',6,'p_receive_stmt','sintax.py',151),
]
