
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTDIVnonassocLTLEGTGEEQNEASSIGN BOOL COLON COMMA COMMENT C_CHANNEL DEF DIV DOT ELSE EQ FALSE FLOAT FLOAT_TYPE FOR GE GT ID IF IN INPUT INT LBRACE LBRACKET LE LIST LPAREN LT MINUS MULT NE NUM OUTPUT PAR PLUS RBRACE RBRACKET RECEIVE RETURN RPAREN SEMICOLON SEND SEQ STRING STRING_TYPE TRUE WHILEprograma_minipar : bloco_stmtbloco_stmt : bloco_SEQ\n| bloco_PARbloco_SEQ : SEQ LBRACE stmts RBRACEbloco_PAR : PAR LBRACE stmts RBRACEstmts : stmt\n| stmt stmtstipo_var : BOOL\n| INT\n| FLOAT_TYPE\n| STRING_TYPE\n| C_CHANNEL\n| LIST LT tipo_var GTdeclaracao : tipo_var ID ASSIGN exprdeclaracao : C_CHANNEL ASSIGN ID STRING NUM SEMICOLONatribuicao : ID ASSIGN exprstmt : declaracao SEMICOLON\n| atribuicao SEMICOLON\n| if_stmt\n| for_stmt\n| while_stmt\n| def_funcao\n| input SEMICOLON\n| output SEMICOLON\n| chamada_funcao SEMICOLON\n| receive_stmt\n| send_stmt\n| RETURN expr SEMICOLON\n| COMMENTfor_stmt : FOR LPAREN ID IN expr RPAREN LBRACE stmts RBRACEwhile_stmt : WHILE LPAREN expr RPAREN LBRACE stmts RBRACEinput : INPUT LPAREN args RPARENoutput : OUTPUT LPAREN args RPARENreceive_stmt : ID DOT RECEIVE COLON expr SEMICOLONsend_stmt : ID DOT SEND COLON expr SEMICOLONparams : ID COMMA params\n| ID\n| def_funcao : DEF ID LPAREN params RPAREN LBRACE stmts RBRACEexpr : INPUT LPAREN args RPARENexpr : OUTPUT LPAREN args RPARENchamada_funcao : ID LPAREN args RPARENargs : expr_list\n| expr : chamada_funcao\n| expr_binop\n| expr_comparacao\n| expr_lista\n| expr_simplesexpr_binop : expr PLUS expr\n| expr MINUS expr\n| expr MULT expr\n| expr DIV exprexpr_comparacao : expr LT expr\n| expr LE expr\n| expr GT expr\n| expr GE expr\n| expr EQ expr\n| expr NE exprexpr_lista : LBRACKET expr_list RBRACKETexpr_list : expr\n| expr COMMA expr_listexpr_simples : ID\n| NUM\n| FLOAT\n| STRING\n| TRUE\n| FALSE\n| ID DOT IDif_stmt : IF LPAREN expr RPAREN LBRACE stmts RBRACE\n| IF LPAREN expr RPAREN LBRACE stmts RBRACE ELSE LBRACE stmts RBRACE'
    
_lr_action_items = {'SEQ':([0,],[5,]),'PAR':([0,],[6,]),'$end':([1,2,3,4,39,73,],[0,-1,-2,-3,-4,-5,]),'LBRACE':([5,6,125,127,143,148,156,],[7,8,139,141,151,153,159,]),'RETURN':([7,8,10,13,14,15,16,20,21,23,41,42,43,44,45,74,139,141,144,145,151,152,153,154,158,159,160,162,],[22,22,22,-19,-20,-21,-22,-26,-27,-29,-17,-18,-23,-24,-25,-28,22,22,-34,-35,22,-70,22,-31,-39,22,-30,-71,]),'COMMENT':([7,8,10,13,14,15,16,20,21,23,41,42,43,44,45,74,139,141,144,145,151,152,153,154,158,159,160,162,],[23,23,23,-19,-20,-21,-22,-26,-27,-29,-17,-18,-23,-24,-25,-28,23,23,-34,-35,23,-70,23,-31,-39,23,-30,-71,]),'C_CHANNEL':([7,8,10,13,14,15,16,20,21,23,41,42,43,44,45,72,74,139,141,144,145,151,152,153,154,158,159,160,162,],[26,26,26,-19,-20,-21,-22,-26,-27,-29,-17,-18,-23,-24,-25,104,-28,26,26,-34,-35,26,-70,26,-31,-39,26,-30,-71,]),'ID':([7,8,10,13,14,15,16,20,21,22,23,24,26,30,33,34,35,36,41,42,43,44,45,55,62,63,65,66,67,68,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,100,119,122,123,126,132,139,141,142,144,145,151,152,153,154,158,159,160,162,],[25,25,25,-19,-20,-21,-22,-26,-27,54,-29,61,-12,69,-8,-9,-10,-11,-17,-18,-23,-24,-25,54,54,54,96,54,98,54,54,54,-28,54,54,54,54,54,54,54,54,54,54,54,54,117,54,128,54,54,54,54,-13,25,25,128,-34,-35,25,-70,25,-31,-39,25,-30,-71,]),'IF':([7,8,10,13,14,15,16,20,21,23,41,42,43,44,45,74,139,141,144,145,151,152,153,154,158,159,160,162,],[27,27,27,-19,-20,-21,-22,-26,-27,-29,-17,-18,-23,-24,-25,-28,27,27,-34,-35,27,-70,27,-31,-39,27,-30,-71,]),'FOR':([7,8,10,13,14,15,16,20,21,23,41,42,43,44,45,74,139,141,144,145,151,152,153,154,158,159,160,162,],[28,28,28,-19,-20,-21,-22,-26,-27,-29,-17,-18,-23,-24,-25,-28,28,28,-34,-35,28,-70,28,-31,-39,28,-30,-71,]),'WHILE':([7,8,10,13,14,15,16,20,21,23,41,42,43,44,45,74,139,141,144,145,151,152,153,154,158,159,160,162,],[29,29,29,-19,-20,-21,-22,-26,-27,-29,-17,-18,-23,-24,-25,-28,29,29,-34,-35,29,-70,29,-31,-39,29,-30,-71,]),'DEF':([7,8,10,13,14,15,16,20,21,23,41,42,43,44,45,74,139,141,144,145,151,152,153,154,158,159,160,162,],[30,30,30,-19,-20,-21,-22,-26,-27,-29,-17,-18,-23,-24,-25,-28,30,30,-34,-35,30,-70,30,-31,-39,30,-30,-71,]),'INPUT':([7,8,10,13,14,15,16,20,21,22,23,41,42,43,44,45,55,62,63,66,68,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,90,119,122,123,126,139,141,144,145,151,152,153,154,158,159,160,162,],[31,31,31,-19,-20,-21,-22,-26,-27,47,-29,-17,-18,-23,-24,-25,47,47,47,47,47,47,47,-28,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,31,31,-34,-35,31,-70,31,-31,-39,31,-30,-71,]),'OUTPUT':([7,8,10,13,14,15,16,20,21,22,23,41,42,43,44,45,55,62,63,66,68,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,90,119,122,123,126,139,141,144,145,151,152,153,154,158,159,160,162,],[32,32,32,-19,-20,-21,-22,-26,-27,48,-29,-17,-18,-23,-24,-25,48,48,48,48,48,48,48,-28,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,32,32,-34,-35,32,-70,32,-31,-39,32,-30,-71,]),'BOOL':([7,8,10,13,14,15,16,20,21,23,41,42,43,44,45,72,74,139,141,144,145,151,152,153,154,158,159,160,162,],[33,33,33,-19,-20,-21,-22,-26,-27,-29,-17,-18,-23,-24,-25,33,-28,33,33,-34,-35,33,-70,33,-31,-39,33,-30,-71,]),'INT':([7,8,10,13,14,15,16,20,21,23,41,42,43,44,45,72,74,139,141,144,145,151,152,153,154,158,159,160,162,],[34,34,34,-19,-20,-21,-22,-26,-27,-29,-17,-18,-23,-24,-25,34,-28,34,34,-34,-35,34,-70,34,-31,-39,34,-30,-71,]),'FLOAT_TYPE':([7,8,10,13,14,15,16,20,21,23,41,42,43,44,45,72,74,139,141,144,145,151,152,153,154,158,159,160,162,],[35,35,35,-19,-20,-21,-22,-26,-27,-29,-17,-18,-23,-24,-25,35,-28,35,35,-34,-35,35,-70,35,-31,-39,35,-30,-71,]),'STRING_TYPE':([7,8,10,13,14,15,16,20,21,23,41,42,43,44,45,72,74,139,141,144,145,151,152,153,154,158,159,160,162,],[36,36,36,-19,-20,-21,-22,-26,-27,-29,-17,-18,-23,-24,-25,36,-28,36,36,-34,-35,36,-70,36,-31,-39,36,-30,-71,]),'LIST':([7,8,10,13,14,15,16,20,21,23,41,42,43,44,45,72,74,139,141,144,145,151,152,153,154,158,159,160,162,],[37,37,37,-19,-20,-21,-22,-26,-27,-29,-17,-18,-23,-24,-25,37,-28,37,37,-34,-35,37,-70,37,-31,-39,37,-30,-71,]),'RBRACE':([9,10,13,14,15,16,20,21,23,38,40,41,42,43,44,45,74,144,145,147,149,152,154,155,157,158,160,161,162,],[39,-6,-19,-20,-21,-22,-26,-27,-29,73,-7,-17,-18,-23,-24,-25,-28,-34,-35,152,154,-70,-31,158,160,-39,-30,162,-71,]),'SEMICOLON':([11,12,17,18,19,46,49,50,51,52,53,54,56,57,58,59,60,91,105,106,107,108,109,110,111,112,113,114,117,118,120,121,130,131,133,134,136,137,138,146,],[41,42,43,44,45,74,-45,-46,-47,-48,-49,-63,-64,-65,-66,-67,-68,-16,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-69,-60,-14,-42,-32,-33,-40,-41,144,145,146,-15,]),'LBRACKET':([22,55,62,63,66,68,70,71,75,76,77,78,79,80,81,82,83,84,85,86,90,119,122,123,126,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'NUM':([22,55,62,63,66,68,70,71,75,76,77,78,79,80,81,82,83,84,85,86,90,119,122,123,124,126,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,138,56,]),'FLOAT':([22,55,62,63,66,68,70,71,75,76,77,78,79,80,81,82,83,84,85,86,90,119,122,123,126,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'STRING':([22,55,62,63,66,68,70,71,75,76,77,78,79,80,81,82,83,84,85,86,90,96,119,122,123,126,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,124,58,58,58,58,]),'TRUE':([22,55,62,63,66,68,70,71,75,76,77,78,79,80,81,82,83,84,85,86,90,119,122,123,126,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'FALSE':([22,55,62,63,66,68,70,71,75,76,77,78,79,80,81,82,83,84,85,86,90,119,122,123,126,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'ASSIGN':([25,26,61,],[62,65,90,]),'LPAREN':([25,27,28,29,31,32,47,48,54,69,],[63,66,67,68,70,71,85,86,63,100,]),'DOT':([25,54,],[64,87,]),'GT':([33,34,35,36,46,49,50,51,52,53,54,56,57,58,59,60,89,91,97,99,103,104,105,106,107,108,109,110,111,112,113,114,117,118,120,121,132,133,134,136,137,140,],[-8,-9,-10,-11,81,-45,-46,-47,-48,-49,-63,-64,-65,-66,-67,-68,81,81,81,81,132,-12,81,81,81,81,None,None,None,None,None,None,-69,-60,81,-42,-13,-40,-41,81,81,81,]),'LT':([37,46,49,50,51,52,53,54,56,57,58,59,60,89,91,97,99,105,106,107,108,109,110,111,112,113,114,117,118,120,121,133,134,136,137,140,],[72,79,-45,-46,-47,-48,-49,-63,-64,-65,-66,-67,-68,79,79,79,79,79,79,79,79,None,None,None,None,None,None,-69,-60,79,-42,-40,-41,79,79,79,]),'PLUS':([46,49,50,51,52,53,54,56,57,58,59,60,89,91,97,99,105,106,107,108,109,110,111,112,113,114,117,118,120,121,133,134,136,137,140,],[75,-45,-46,-47,-48,-49,-63,-64,-65,-66,-67,-68,75,75,75,75,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-69,-60,75,-42,-40,-41,75,75,75,]),'MINUS':([46,49,50,51,52,53,54,56,57,58,59,60,89,91,97,99,105,106,107,108,109,110,111,112,113,114,117,118,120,121,133,134,136,137,140,],[76,-45,-46,-47,-48,-49,-63,-64,-65,-66,-67,-68,76,76,76,76,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-69,-60,76,-42,-40,-41,76,76,76,]),'MULT':([46,49,50,51,52,53,54,56,57,58,59,60,89,91,97,99,105,106,107,108,109,110,111,112,113,114,117,118,120,121,133,134,136,137,140,],[77,-45,-46,-47,-48,-49,-63,-64,-65,-66,-67,-68,77,77,77,77,77,77,-52,-53,-54,-55,-56,-57,-58,-59,-69,-60,77,-42,-40,-41,77,77,77,]),'DIV':([46,49,50,51,52,53,54,56,57,58,59,60,89,91,97,99,105,106,107,108,109,110,111,112,113,114,117,118,120,121,133,134,136,137,140,],[78,-45,-46,-47,-48,-49,-63,-64,-65,-66,-67,-68,78,78,78,78,78,78,-52,-53,-54,-55,-56,-57,-58,-59,-69,-60,78,-42,-40,-41,78,78,78,]),'LE':([46,49,50,51,52,53,54,56,57,58,59,60,89,91,97,99,105,106,107,108,109,110,111,112,113,114,117,118,120,121,133,134,136,137,140,],[80,-45,-46,-47,-48,-49,-63,-64,-65,-66,-67,-68,80,80,80,80,80,80,80,80,None,None,None,None,None,None,-69,-60,80,-42,-40,-41,80,80,80,]),'GE':([46,49,50,51,52,53,54,56,57,58,59,60,89,91,97,99,105,106,107,108,109,110,111,112,113,114,117,118,120,121,133,134,136,137,140,],[82,-45,-46,-47,-48,-49,-63,-64,-65,-66,-67,-68,82,82,82,82,82,82,82,82,None,None,None,None,None,None,-69,-60,82,-42,-40,-41,82,82,82,]),'EQ':([46,49,50,51,52,53,54,56,57,58,59,60,89,91,97,99,105,106,107,108,109,110,111,112,113,114,117,118,120,121,133,134,136,137,140,],[83,-45,-46,-47,-48,-49,-63,-64,-65,-66,-67,-68,83,83,83,83,83,83,83,83,None,None,None,None,None,None,-69,-60,83,-42,-40,-41,83,83,83,]),'NE':([46,49,50,51,52,53,54,56,57,58,59,60,89,91,97,99,105,106,107,108,109,110,111,112,113,114,117,118,120,121,133,134,136,137,140,],[84,-45,-46,-47,-48,-49,-63,-64,-65,-66,-67,-68,84,84,84,84,84,84,84,84,None,None,None,None,None,None,-69,-60,84,-42,-40,-41,84,84,84,]),'COMMA':([49,50,51,52,53,54,56,57,58,59,60,89,105,106,107,108,109,110,111,112,113,114,117,118,121,128,133,134,],[-45,-46,-47,-48,-49,-63,-64,-65,-66,-67,-68,119,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-69,-60,-42,142,-40,-41,]),'RBRACKET':([49,50,51,52,53,54,56,57,58,59,60,88,89,105,106,107,108,109,110,111,112,113,114,117,118,121,133,134,135,],[-45,-46,-47,-48,-49,-63,-64,-65,-66,-67,-68,118,-61,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-69,-60,-42,-40,-41,-62,]),'RPAREN':([49,50,51,52,53,54,56,57,58,59,60,63,70,71,85,86,89,92,93,97,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,121,128,129,133,134,135,140,142,150,],[-45,-46,-47,-48,-49,-63,-64,-65,-66,-67,-68,-44,-44,-44,-44,-44,-61,121,-43,125,127,-38,130,131,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,133,134,-69,-60,-42,-37,143,-40,-41,-62,148,-38,-36,]),'RECEIVE':([64,],[94,]),'SEND':([64,],[95,]),'COLON':([94,95,],[122,123,]),'IN':([98,],[126,]),'ELSE':([152,],[156,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa_minipar':([0,],[1,]),'bloco_stmt':([0,],[2,]),'bloco_SEQ':([0,],[3,]),'bloco_PAR':([0,],[4,]),'stmts':([7,8,10,139,141,151,153,159,],[9,38,40,147,149,155,157,161,]),'stmt':([7,8,10,139,141,151,153,159,],[10,10,10,10,10,10,10,10,]),'declaracao':([7,8,10,139,141,151,153,159,],[11,11,11,11,11,11,11,11,]),'atribuicao':([7,8,10,139,141,151,153,159,],[12,12,12,12,12,12,12,12,]),'if_stmt':([7,8,10,139,141,151,153,159,],[13,13,13,13,13,13,13,13,]),'for_stmt':([7,8,10,139,141,151,153,159,],[14,14,14,14,14,14,14,14,]),'while_stmt':([7,8,10,139,141,151,153,159,],[15,15,15,15,15,15,15,15,]),'def_funcao':([7,8,10,139,141,151,153,159,],[16,16,16,16,16,16,16,16,]),'input':([7,8,10,139,141,151,153,159,],[17,17,17,17,17,17,17,17,]),'output':([7,8,10,139,141,151,153,159,],[18,18,18,18,18,18,18,18,]),'chamada_funcao':([7,8,10,22,55,62,63,66,68,70,71,75,76,77,78,79,80,81,82,83,84,85,86,90,119,122,123,126,139,141,151,153,159,],[19,19,19,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,19,19,19,19,19,]),'receive_stmt':([7,8,10,139,141,151,153,159,],[20,20,20,20,20,20,20,20,]),'send_stmt':([7,8,10,139,141,151,153,159,],[21,21,21,21,21,21,21,21,]),'tipo_var':([7,8,10,72,139,141,151,153,159,],[24,24,24,103,24,24,24,24,24,]),'expr':([22,55,62,63,66,68,70,71,75,76,77,78,79,80,81,82,83,84,85,86,90,119,122,123,126,],[46,89,91,89,97,99,89,89,105,106,107,108,109,110,111,112,113,114,89,89,120,89,136,137,140,]),'expr_binop':([22,55,62,63,66,68,70,71,75,76,77,78,79,80,81,82,83,84,85,86,90,119,122,123,126,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'expr_comparacao':([22,55,62,63,66,68,70,71,75,76,77,78,79,80,81,82,83,84,85,86,90,119,122,123,126,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'expr_lista':([22,55,62,63,66,68,70,71,75,76,77,78,79,80,81,82,83,84,85,86,90,119,122,123,126,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'expr_simples':([22,55,62,63,66,68,70,71,75,76,77,78,79,80,81,82,83,84,85,86,90,119,122,123,126,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'expr_list':([55,63,70,71,85,86,119,],[88,93,93,93,93,93,135,]),'args':([63,70,71,85,86,],[92,101,102,115,116,]),'params':([100,142,],[129,150,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa_minipar","S'",1,None,None,None),
  ('programa_minipar -> bloco_stmt','programa_minipar',1,'p_programa_minipar','parser.py',24),
  ('bloco_stmt -> bloco_SEQ','bloco_stmt',1,'p_bloco_stmt','parser.py',29),
  ('bloco_stmt -> bloco_PAR','bloco_stmt',1,'p_bloco_stmt','parser.py',30),
  ('bloco_SEQ -> SEQ LBRACE stmts RBRACE','bloco_SEQ',4,'p_bloco_SEQ','parser.py',34),
  ('bloco_PAR -> PAR LBRACE stmts RBRACE','bloco_PAR',4,'p_bloco_PAR','parser.py',40),
  ('stmts -> stmt','stmts',1,'p_stmts','parser.py',45),
  ('stmts -> stmt stmts','stmts',2,'p_stmts','parser.py',46),
  ('tipo_var -> BOOL','tipo_var',1,'p_tipo_var','parser.py',51),
  ('tipo_var -> INT','tipo_var',1,'p_tipo_var','parser.py',52),
  ('tipo_var -> FLOAT_TYPE','tipo_var',1,'p_tipo_var','parser.py',53),
  ('tipo_var -> STRING_TYPE','tipo_var',1,'p_tipo_var','parser.py',54),
  ('tipo_var -> C_CHANNEL','tipo_var',1,'p_tipo_var','parser.py',55),
  ('tipo_var -> LIST LT tipo_var GT','tipo_var',4,'p_tipo_var','parser.py',56),
  ('declaracao -> tipo_var ID ASSIGN expr','declaracao',4,'p_declaracao','parser.py',62),
  ('declaracao -> C_CHANNEL ASSIGN ID STRING NUM SEMICOLON','declaracao',6,'p_declaracao_canal','parser.py',85),
  ('atribuicao -> ID ASSIGN expr','atribuicao',3,'p_atribuicao','parser.py',97),
  ('stmt -> declaracao SEMICOLON','stmt',2,'p_stmt','parser.py',102),
  ('stmt -> atribuicao SEMICOLON','stmt',2,'p_stmt','parser.py',103),
  ('stmt -> if_stmt','stmt',1,'p_stmt','parser.py',104),
  ('stmt -> for_stmt','stmt',1,'p_stmt','parser.py',105),
  ('stmt -> while_stmt','stmt',1,'p_stmt','parser.py',106),
  ('stmt -> def_funcao','stmt',1,'p_stmt','parser.py',107),
  ('stmt -> input SEMICOLON','stmt',2,'p_stmt','parser.py',108),
  ('stmt -> output SEMICOLON','stmt',2,'p_stmt','parser.py',109),
  ('stmt -> chamada_funcao SEMICOLON','stmt',2,'p_stmt','parser.py',110),
  ('stmt -> receive_stmt','stmt',1,'p_stmt','parser.py',111),
  ('stmt -> send_stmt','stmt',1,'p_stmt','parser.py',112),
  ('stmt -> RETURN expr SEMICOLON','stmt',3,'p_stmt','parser.py',113),
  ('stmt -> COMMENT','stmt',1,'p_stmt','parser.py',114),
  ('for_stmt -> FOR LPAREN ID IN expr RPAREN LBRACE stmts RBRACE','for_stmt',9,'p_for_stmt','parser.py',119),
  ('while_stmt -> WHILE LPAREN expr RPAREN LBRACE stmts RBRACE','while_stmt',7,'p_while_stmt','parser.py',124),
  ('input -> INPUT LPAREN args RPAREN','input',4,'p_input','parser.py',128),
  ('output -> OUTPUT LPAREN args RPAREN','output',4,'p_output','parser.py',132),
  ('receive_stmt -> ID DOT RECEIVE COLON expr SEMICOLON','receive_stmt',6,'p_receive_stmt','parser.py',137),
  ('send_stmt -> ID DOT SEND COLON expr SEMICOLON','send_stmt',6,'p_send_stmt','parser.py',142),
  ('params -> ID COMMA params','params',3,'p_params','parser.py',148),
  ('params -> ID','params',1,'p_params','parser.py',149),
  ('params -> <empty>','params',0,'p_params','parser.py',150),
  ('def_funcao -> DEF ID LPAREN params RPAREN LBRACE stmts RBRACE','def_funcao',8,'p_def_funcao','parser.py',160),
  ('expr -> INPUT LPAREN args RPAREN','expr',4,'p_expr_input','parser.py',181),
  ('expr -> OUTPUT LPAREN args RPAREN','expr',4,'p_expr_output','parser.py',185),
  ('chamada_funcao -> ID LPAREN args RPAREN','chamada_funcao',4,'p_chamada_funcao','parser.py',190),
  ('args -> expr_list','args',1,'p_args','parser.py',205),
  ('args -> <empty>','args',0,'p_args','parser.py',206),
  ('expr -> chamada_funcao','expr',1,'p_expr','parser.py',211),
  ('expr -> expr_binop','expr',1,'p_expr','parser.py',212),
  ('expr -> expr_comparacao','expr',1,'p_expr','parser.py',213),
  ('expr -> expr_lista','expr',1,'p_expr','parser.py',214),
  ('expr -> expr_simples','expr',1,'p_expr','parser.py',215),
  ('expr_binop -> expr PLUS expr','expr_binop',3,'p_expr_binop','parser.py',219),
  ('expr_binop -> expr MINUS expr','expr_binop',3,'p_expr_binop','parser.py',220),
  ('expr_binop -> expr MULT expr','expr_binop',3,'p_expr_binop','parser.py',221),
  ('expr_binop -> expr DIV expr','expr_binop',3,'p_expr_binop','parser.py',222),
  ('expr_comparacao -> expr LT expr','expr_comparacao',3,'p_expr_comparacao','parser.py',226),
  ('expr_comparacao -> expr LE expr','expr_comparacao',3,'p_expr_comparacao','parser.py',227),
  ('expr_comparacao -> expr GT expr','expr_comparacao',3,'p_expr_comparacao','parser.py',228),
  ('expr_comparacao -> expr GE expr','expr_comparacao',3,'p_expr_comparacao','parser.py',229),
  ('expr_comparacao -> expr EQ expr','expr_comparacao',3,'p_expr_comparacao','parser.py',230),
  ('expr_comparacao -> expr NE expr','expr_comparacao',3,'p_expr_comparacao','parser.py',231),
  ('expr_lista -> LBRACKET expr_list RBRACKET','expr_lista',3,'p_expr_lista','parser.py',235),
  ('expr_list -> expr','expr_list',1,'p_expr_list','parser.py',239),
  ('expr_list -> expr COMMA expr_list','expr_list',3,'p_expr_list','parser.py',240),
  ('expr_simples -> ID','expr_simples',1,'p_expr_simples','parser.py',244),
  ('expr_simples -> NUM','expr_simples',1,'p_expr_simples','parser.py',245),
  ('expr_simples -> FLOAT','expr_simples',1,'p_expr_simples','parser.py',246),
  ('expr_simples -> STRING','expr_simples',1,'p_expr_simples','parser.py',247),
  ('expr_simples -> TRUE','expr_simples',1,'p_expr_simples','parser.py',248),
  ('expr_simples -> FALSE','expr_simples',1,'p_expr_simples','parser.py',249),
  ('expr_simples -> ID DOT ID','expr_simples',3,'p_expr_simples','parser.py',250),
  ('if_stmt -> IF LPAREN expr RPAREN LBRACE stmts RBRACE','if_stmt',7,'p_if_stmt','parser.py',275),
  ('if_stmt -> IF LPAREN expr RPAREN LBRACE stmts RBRACE ELSE LBRACE stmts RBRACE','if_stmt',11,'p_if_stmt','parser.py',276),
]
